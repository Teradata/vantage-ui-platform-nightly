{"version":3,"sources":["ng://@td-vantage/ui-platform/utilities/user-feedback/error/error.service.ts","ng://@td-vantage/ui-platform/utilities/user-feedback/toast/toast.service.ts","ng://@td-vantage/ui-platform/utilities/user-feedback/user-feedback.module.ts","ng://@td-vantage/ui-platform/utilities/pre-loader/pre-loader.ts"],"names":["VantageErrorService","_dialogService","_translate","this","prototype","open","error","config","title","instant","message","disableClose","closeButton","toString","openAlert","Injectable","TdDialogService","TranslateService","VANTAGE_ERROR_PROVIDER_FACTORY","parent","dialogService","translate","VANTAGE_ERROR_PROVIDER","provide","deps","Optional","SkipSelf","useFactory","VantageToastService","_snackBarService","_media","time","undefined","duration","horizontalPosition","query","MatSnackBar","TdMediaService","VANTAGE_TOAST_PROVIDER_FACTORY","snackBar","media","VANTAGE_TOAST_PROVIDER","VantageUserFeedbackModule","NgModule","args","imports","CommonModule","MatSnackBarModule","CovalentDialogsModule","CovalentMediaModule","providers","updatePreLoaderVisibility","loader","document","getElementById","style","height","TD_PRE_LOADER_COUNT","opacity"],"mappings":"2zBAQA,8BAOE,SAAAA,EAAoBC,EAAyCC,GAAzCC,KAAAF,eAAAA,EAAyCE,KAAAD,WAAAA,EAkB/D,OAhBEF,EAAAI,UAAAC,KAAA,SAAKC,GACH,GAAIA,EAAO,KACHC,EAAuB,CAC3BC,MAAOL,KAAKD,WAAWO,QAAQ,uBAC/BC,QAASJ,EAAMI,QACfC,cAAc,EACdC,YAAaT,KAAKD,WAAWO,QAAQ,UAKvC,GAHIH,EAAMA,QACRC,EAAOG,SAAW,KAAKJ,EAAMA,MAAMO,WAAU,KAE3CN,EAAOG,SAAWH,EAAOC,MAC3B,OAAOL,KAAKF,eAAea,UAAUP,yBAhB5CQ,EAAAA,sDATQC,EAAAA,uBAEAC,EAAAA,oBA2BTjB,cAEgBkB,EACdC,EACAC,EACAC,GAEA,OAAOF,GAAU,IAAInB,EAAoBoB,EAAeC,OAG7CC,EAAmC,CAE9CC,QAASvB,EACTwB,KAAM,CAAC,CAAC,IAAIC,EAAAA,SAAY,IAAIC,EAAAA,SAAY1B,GAAsBgB,EAAAA,gBAAiBC,EAAAA,kBAC/EU,WAAYT,gBCvCZ,SAAAU,EAAoBC,EAAuCC,GAAvC3B,KAAA0B,iBAAAA,EAAuC1B,KAAA2B,OAAAA,EAU7D,OAREF,EAAAxB,UAAAC,KAAA,SAAKK,EAAiBqB,QAAA,IAAAA,IAAAA,EAAA,KAChBrB,GACFP,KAAK0B,iBAAiBxB,KAAKK,OAASsB,EAAW,CAC7CC,SAAUF,EACVG,mBAAoB/B,KAAK2B,QAAU3B,KAAK2B,OAAOK,MAAM,SAAW,MAAQ,gCAR/EpB,EAAAA,sDAJQqB,EAAAA,mBAEAC,EAAAA,kBAcTT,KAEA,SAAgBU,EACdnB,EACAoB,EACAC,GAEA,OAAOrB,GAAU,IAAIS,EAAoBW,EAAUC,OAGxCC,EAAmC,CAE9ClB,QAASK,EACTJ,KAAM,CAAC,CAAC,IAAIC,EAAAA,SAAY,IAAIC,EAAAA,SAAYE,GAAsBQ,EAAAA,YAAa,CAAC,IAAIX,EAAAA,SAAYY,EAAAA,iBAC5FV,WAAYW,gBCpBd,SAAAI,KAIwC,2BAJvCC,EAAAA,SAAQC,KAAA,CAAC,CACRC,QAAS,CAACC,EAAAA,aAAcC,EAAAA,kBAAmBC,EAAAA,sBAAuBC,EAAAA,qBAClEC,UAAW,CAAC5B,EAAwBmB,OAEEC,KCAxC,SAASS,QACDC,EAAsBC,SAASC,eAAe,iBAChDF,IACFA,EAAOG,MAAMC,OAAS,OAAcC,oBAAsB,EAAI,OAAS,IACvEL,EAAOG,MAAMG,QAAU,OAAcD,oBAAsB,EAAI,IAAM,oHAXzE,gBAC4CzB,IAAtC,OAAcyB,sBAChB,OAAcA,sBACdN,sBAVJ,gBAC4CnB,IAAtC,OAAcyB,sBAChB,OAAcA,sBACdN","sourcesContent":["import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\n\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { TdDialogService, IAlertConfig, TdAlertDialogComponent } from '@covalent/core/dialogs';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nexport class VantageError {\n  message: string;\n  error: number;\n}\n\n@Injectable()\nexport class VantageErrorService {\n  constructor(private _dialogService: TdDialogService, private _translate: TranslateService) {}\n\n  open(error: VantageError): MatDialogRef<TdAlertDialogComponent> {\n    if (error) {\n      const config: IAlertConfig = {\n        title: this._translate.instant('THERE_WAS_A_PROBLEM'),\n        message: error.message,\n        disableClose: true,\n        closeButton: this._translate.instant('CLOSE'),\n      };\n      if (error.error) {\n        config.message += ` (${error.error.toString()})`;\n      }\n      if (config.message || config.title) {\n        return this._dialogService.openAlert(config);\n      }\n    }\n  }\n}\n\nexport function VANTAGE_ERROR_PROVIDER_FACTORY(\n  parent: VantageErrorService,\n  dialogService: TdDialogService,\n  translate: TranslateService,\n): VantageErrorService {\n  return parent || new VantageErrorService(dialogService, translate);\n}\n\nexport const VANTAGE_ERROR_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageErrorService,\n  deps: [[new Optional(), new SkipSelf(), VantageErrorService], TdDialogService, TranslateService],\n  useFactory: VANTAGE_ERROR_PROVIDER_FACTORY,\n};\n","import { Injectable, Provider, Optional, SkipSelf } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { TdMediaService } from '@covalent/core/media';\n\n@Injectable()\nexport class VantageToastService {\n  constructor(private _snackBarService: MatSnackBar, private _media: TdMediaService) {}\n\n  open(message: string, time: number = 3000): void {\n    if (message) {\n      this._snackBarService.open(message, undefined, {\n        duration: time,\n        horizontalPosition: this._media && this._media.query('gt-sm') ? 'end' : 'center',\n      });\n    }\n  }\n}\n\nexport function VANTAGE_TOAST_PROVIDER_FACTORY(\n  parent: VantageToastService,\n  snackBar: MatSnackBar,\n  media: TdMediaService,\n): VantageToastService {\n  return parent || new VantageToastService(snackBar, media);\n}\n\nexport const VANTAGE_TOAST_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageToastService,\n  deps: [[new Optional(), new SkipSelf(), VantageToastService], MatSnackBar, [new Optional(), TdMediaService]],\n  useFactory: VANTAGE_TOAST_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { CovalentDialogsModule } from '@covalent/core/dialogs';\nimport { CovalentMediaModule } from '@covalent/core/media';\n\nimport { VANTAGE_ERROR_PROVIDER } from './error/error.service';\nimport { VANTAGE_TOAST_PROVIDER } from './toast/toast.service';\n\n@NgModule({\n  imports: [CommonModule, MatSnackBarModule, CovalentDialogsModule, CovalentMediaModule],\n  providers: [VANTAGE_ERROR_PROVIDER, VANTAGE_TOAST_PROVIDER],\n})\nexport class VantageUserFeedbackModule {}\n","// TD_PRE_LOADER_COUNT variable is defined inside pre-loader.html\n\nexport function showPreLoader(): void {\n  if ((<any>window).TD_PRE_LOADER_COUNT !== undefined) {\n    (<any>window).TD_PRE_LOADER_COUNT++;\n    updatePreLoaderVisibility();\n  }\n}\n\nexport function hidePreLoader(): void {\n  if ((<any>window).TD_PRE_LOADER_COUNT !== undefined) {\n    (<any>window).TD_PRE_LOADER_COUNT--;\n    updatePreLoaderVisibility();\n  }\n}\n\nfunction updatePreLoaderVisibility(): void {\n  const loader: HTMLElement = document.getElementById('td-pre-loader');\n  if (loader) {\n    loader.style.height = (<any>window).TD_PRE_LOADER_COUNT > 0 ? '100%' : '0';\n    loader.style.opacity = (<any>window).TD_PRE_LOADER_COUNT > 0 ? '1' : '0';\n  }\n}\n"]}