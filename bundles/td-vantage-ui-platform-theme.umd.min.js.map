{"version":3,"sources":["ng://@td-vantage/ui-platform/theme/theme.service.ts","ng://@td-vantage/ui-platform/theme/theme.module.ts"],"names":["DARK","LIGHT","VantageThemeService","rendererFactory","_document","_this","this","_activeThemeSubject","BehaviorSubject","localStorage","getItem","activeTheme$","asObservable","darkTheme$","pipe","map","theme","VantageTheme","lightTheme$","_renderer2","createRenderer","undefined","fromEvent","window","filter","event","key","subscribe","applyTheme","Object","defineProperty","prototype","getValue","next","_activeTheme","activeTheme","applyLightTheme","applyDarkTheme","toggleTheme","mapObject","fallback","value","removeClass","querySelector","setItem","addClass","Injectable","RendererFactory2","Inject","args","DOCUMENT","VANTAGE_THEME_PROVIDER_FACTORY","parent","VANTAGE_THEME_PROVIDER","provide","deps","Optional","SkipSelf","useFactory","VantageThemeModule","NgModule","imports","CommonModule","providers"],"mappings":"6jBAQEA,KAAO,aACPC,MAAQ,gCAwBR,SAAAC,EAAoBC,EAA6DC,GAAjF,IAAAC,EAAAC,KAAoBA,KAAAH,gBAAAA,EAA6DG,KAAAF,UAAAA,EAZhEE,KAAAC,oBAAqD,IAAIC,EAAAA,gBAC1DC,aAAaC,QAjBS,kBAoBtBJ,KAAAK,aAAyCL,KAAKC,oBAAoBK,eAClEN,KAAAO,WAAkCP,KAAKC,oBACpDK,eACAE,KAAKC,EAAAA,KAAG,SAAEC,GAAwB,OAAAA,IAAUC,EAAajB,SAC5CM,KAAAY,YAAmCZ,KAAKC,oBACrDK,eACAE,KAAKC,EAAAA,KAAG,SAAEC,GAAwB,OAAAA,IAAUC,EAAahB,UAG1DK,KAAKa,WAAahB,EAAgBiB,oBAAeC,OAAWA,GAC5DC,EAAAA,UAAUC,OAAQ,WACfT,KAAKU,EAAAA,QAAM,SAAEC,GAAwB,MA/BJ,kBA+BIA,EAAMC,QAC3CC,WAAS,SAAEF,GAAwB,OAAApB,EAAKuB,WAAyBH,EAAc,aA+CtF,OA5CEI,OAAAC,eAAY5B,EAAA6B,UAAA,eAAY,KAAxB,WACE,OAAOzB,KAAKC,oBAAoByB,gBAGlC,SAAyBhB,GACvBV,KAAKC,oBAAoB0B,KAAKjB,oCAGhCa,OAAAC,eAAW5B,EAAA6B,UAAA,oBAAiB,KAA5B,WACE,OAAOzB,KAAK4B,eAAiBjB,EAAajB,sCAE5C6B,OAAAC,eAAW5B,EAAA6B,UAAA,qBAAkB,KAA7B,WACE,OAAOzB,KAAK4B,eAAiBjB,EAAahB,uCAGrCC,EAAA6B,UAAAI,YAAP,WACE,OAAO7B,KAAK4B,cAGPhC,EAAA6B,UAAAK,gBAAP,WACE9B,KAAKsB,WAAWX,EAAahB,QAGxBC,EAAA6B,UAAAM,eAAP,WACE/B,KAAKsB,WAAWX,EAAajB,OAGxBE,EAAA6B,UAAAO,YAAP,WACEhC,KAAK4B,eAAiBjB,EAAajB,KAAOM,KAAK8B,kBAAoB9B,KAAK+B,kBAGnEnC,EAAA6B,UAAAhB,IAAP,SAAWwB,EAA6BC,GACtC,OAAOlC,KAAKK,aAAaG,KAAKC,EAAAA,KAAG,SAAE0B,GAAwB,OAACA,KAASF,EAAYA,EAAUE,GAASD,OAG9FtC,EAAA6B,UAAAH,WAAR,SAAmBZ,GACjBV,KAAKa,WAAWuB,YACdpC,KAAKF,UAAUuC,cAAc,QAC7B3B,IAAUC,EAAajB,KAAOiB,EAAahB,MAAQgB,EAAajB,MAElES,aAAamC,QA3EuB,gBA2EU5B,GAC9CV,KAAKa,WAAW0B,SAASvC,KAAKF,UAAUuC,cAAc,QAAS3B,GAC/DV,KAAK4B,aAA6BzB,aAAaC,QA7EX,sCAYvCoC,EAAAA,sDAjBuCC,EAAAA,iDAiCkBC,EAAAA,OAAMC,KAAA,CAACC,EAAAA,eAmDjEhD,cAEgBiD,EACdC,EACAjD,EACAC,GAEA,OAAOgD,GAAU,IAAIlD,EAAoBC,EAAiBC,OAG/CiD,EAAmC,CAE9CC,QAASpD,EACTqD,KAAM,CAAC,CAAC,IAAIC,EAAAA,SAAY,IAAIC,EAAAA,SAAYvD,GAAsB,CAAC6C,EAAAA,kBAAmB,CAACG,EAAAA,WACnFQ,WAAYP,gBC9Fd,SAAAQ,KAIiC,2BAJhCC,EAAAA,SAAQX,KAAA,CAAC,CACRY,QAAS,CAACC,EAAAA,cACVC,UAAW,CAACV,OAEmBM","sourcesContent":["import { Injectable, Renderer2, Inject, RendererFactory2, Provider, Optional, SkipSelf } from '@angular/core';\nimport { fromEvent, BehaviorSubject, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\nconst THEME_LOCAL_STORAGE_KEY: string = 'vantage.theme';\n\nexport enum VantageTheme {\n  DARK = 'dark-theme',\n  LIGHT = 'light-theme',\n}\n\nexport interface IVantageThemeMap {\n  [VantageTheme.DARK]?: any;\n  [VantageTheme.LIGHT]?: any;\n}\n\n@Injectable()\nexport class VantageThemeService {\n  private _renderer2: Renderer2;\n\n  private readonly _activeThemeSubject: BehaviorSubject<VantageTheme> = new BehaviorSubject<VantageTheme>(\n    <VantageTheme>localStorage.getItem(THEME_LOCAL_STORAGE_KEY),\n  );\n\n  public readonly activeTheme$: Observable<VantageTheme> = this._activeThemeSubject.asObservable();\n  public readonly darkTheme$: Observable<boolean> = this._activeThemeSubject\n    .asObservable()\n    .pipe(map((theme: VantageTheme) => theme === VantageTheme.DARK));\n  public readonly lightTheme$: Observable<boolean> = this._activeThemeSubject\n    .asObservable()\n    .pipe(map((theme: VantageTheme) => theme === VantageTheme.LIGHT));\n\n  constructor(private rendererFactory: RendererFactory2, @Inject(DOCUMENT) private _document: any) {\n    this._renderer2 = rendererFactory.createRenderer(undefined, undefined);\n    fromEvent(window, 'storage')\n      .pipe(filter((event: StorageEvent) => event.key === THEME_LOCAL_STORAGE_KEY))\n      .subscribe((event: StorageEvent) => this.applyTheme(<VantageTheme>event.newValue));\n  }\n\n  private get _activeTheme(): VantageTheme {\n    return this._activeThemeSubject.getValue();\n  }\n\n  private set _activeTheme(theme: VantageTheme) {\n    this._activeThemeSubject.next(theme);\n  }\n\n  public get darkThemeIsActive(): boolean {\n    return this._activeTheme === VantageTheme.DARK;\n  }\n  public get lightThemeIsActive(): boolean {\n    return this._activeTheme === VantageTheme.LIGHT;\n  }\n\n  public activeTheme(): VantageTheme {\n    return this._activeTheme;\n  }\n\n  public applyLightTheme(): void {\n    this.applyTheme(VantageTheme.LIGHT);\n  }\n\n  public applyDarkTheme(): void {\n    this.applyTheme(VantageTheme.DARK);\n  }\n\n  public toggleTheme(): void {\n    this._activeTheme === VantageTheme.DARK ? this.applyLightTheme() : this.applyDarkTheme();\n  }\n\n  public map(mapObject: IVantageThemeMap, fallback?: any): Observable<any> {\n    return this.activeTheme$.pipe(map((value: VantageTheme) => (value in mapObject ? mapObject[value] : fallback)));\n  }\n\n  private applyTheme(theme: VantageTheme): void {\n    this._renderer2.removeClass(\n      this._document.querySelector('html'),\n      theme === VantageTheme.DARK ? VantageTheme.LIGHT : VantageTheme.DARK,\n    );\n    localStorage.setItem(THEME_LOCAL_STORAGE_KEY, theme);\n    this._renderer2.addClass(this._document.querySelector('html'), theme);\n    this._activeTheme = <VantageTheme>localStorage.getItem(THEME_LOCAL_STORAGE_KEY);\n  }\n}\n\nexport function VANTAGE_THEME_PROVIDER_FACTORY(\n  parent: VantageThemeService,\n  rendererFactory: RendererFactory2,\n  _document: any,\n): VantageThemeService {\n  return parent || new VantageThemeService(rendererFactory, _document);\n}\n\nexport const VANTAGE_THEME_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageThemeService,\n  deps: [[new Optional(), new SkipSelf(), VantageThemeService], [RendererFactory2], [DOCUMENT]],\n  useFactory: VANTAGE_THEME_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VANTAGE_THEME_PROVIDER } from './theme.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [VANTAGE_THEME_PROVIDER],\n})\nexport class VantageThemeModule {}\n"]}