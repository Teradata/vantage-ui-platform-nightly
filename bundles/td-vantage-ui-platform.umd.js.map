{"version":3,"file":"td-vantage-ui-platform.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://@td-vantage/ui-platform/audit/audit.service.ts","ng://@td-vantage/ui-platform/audit/audit.module.ts","ng://@td-vantage/ui-platform/notification/smtp/smtp.service.ts","ng://@td-vantage/ui-platform/notification/notification.module.ts","ng://@td-vantage/ui-platform/system/system.service.ts","ng://@td-vantage/ui-platform/system/system.module.ts","ng://@td-vantage/ui-platform/user/ldap/ldap.service.ts","ng://@td-vantage/ui-platform/user/user/user.service.ts","ng://@td-vantage/ui-platform/user/group/group.service.ts","ng://@td-vantage/ui-platform/user/user.module.ts","ng://@td-vantage/ui-platform/sqle/query.service.ts","ng://@td-vantage/ui-platform/sqle/dictionary.service.ts","ng://@td-vantage/ui-platform/sqle/connection.service.ts","ng://@td-vantage/ui-platform/sqle/sqle.module.ts","ng://@td-vantage/ui-platform/utilities/user-feedback/error/error.service.ts","ng://@td-vantage/ui-platform/utilities/user-feedback/toast/toast.service.ts","ng://@td-vantage/ui-platform/utilities/user-feedback/user-feedback.module.ts","ng://@td-vantage/ui-platform/utilities/theme/theme.service.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Optional, SkipSelf, Provider } from '@angular/core';\nimport { HttpParams, HttpHeaders, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { TdHttp, TdGET, TdPOST, TdParam, TdBody, TdResponse, TdQueryParams } from '@covalent/http';\n\nexport interface IAuditLog {\n  action?: string;\n  component?: string;\n  correlation_id?: string;\n  details?: string;\n  id?: number;\n  logtime?: any;\n  message?: string;\n  result?: boolean;\n  username?: string;\n}\n\n@TdHttp({\n  baseUrl: '/api/audit',\n  baseHeaders: new HttpHeaders({ Accept: 'application/json' }),\n})\nexport class VantageAuditService {\n  @TdGET({\n    path: '/audit/messages',\n    options: {\n      observe: 'response',\n    },\n  })\n  query(\n    @TdQueryParams() params?: HttpParams,\n    @TdResponse() response?: Observable<HttpResponse<any>>,\n  ): Observable<{ total: number; data: IAuditLog[] }> {\n    return response.pipe(\n      map((res: HttpResponse<any>) => {\n        return {\n          total: +res.headers.get('X-Total'),\n          data: <IAuditLog[]>res.body,\n        };\n      }),\n    );\n  }\n\n  @TdPOST({\n    path: '/audit/messages',\n  })\n  create(@TdBody() body: IAuditLog, @TdResponse() response?: Observable<IAuditLog>): Observable<IAuditLog> {\n    return response;\n  }\n\n  @TdGET({\n    path: '/audit/messages/:id',\n  })\n  get(@TdParam('id') id: number | string, @TdResponse() response?: Observable<IAuditLog>): Observable<IAuditLog> {\n    return response;\n  }\n\n  @TdGET({\n    path: '/health',\n  })\n  health(@TdResponse() response?: Observable<HttpResponse<any>>): Observable<boolean> {\n    return response.pipe(\n      catchError((error: HttpErrorResponse) => {\n        return of(false);\n      }),\n      map((res: HttpResponse<any>) => {\n        return !!res;\n      }),\n    );\n  }\n}\n\nexport function VANTAGE_AUDIT_PROVIDER_FACTORY(parent: VantageAuditService): VantageAuditService {\n  return parent || new VantageAuditService();\n}\n\nexport const VANTAGE_AUDIT_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageAuditService,\n  deps: [[new Optional(), new SkipSelf(), VantageAuditService]],\n  useFactory: VANTAGE_AUDIT_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VANTAGE_AUDIT_PROVIDER } from './audit.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [VANTAGE_AUDIT_PROVIDER],\n})\nexport class VantageAuditModule {}\n","import { Provider, Optional, SkipSelf } from '@angular/core';\nimport { HttpHeaders, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { TdHttp, TdGET, TdPUT, TdDELETE, TdBody, TdResponse } from '@covalent/http';\n\nexport interface ISMTPConfig {\n  server?: string;\n  port?: number;\n  reply_address?: string;\n  smtp_username?: string;\n  smtp_password?: string;\n  use_ssl?: boolean;\n  anon_logon?: boolean;\n  server_timeout?: number;\n}\n\n@TdHttp({\n  baseUrl: '/api/notification',\n  baseHeaders: new HttpHeaders({ Accept: 'application/json' }),\n})\nexport class VantageSMTPService {\n  @TdPUT({\n    path: '/smtp-config',\n  })\n  create(@TdBody() body: ISMTPConfig, @TdResponse() response?: Observable<ISMTPConfig>): Observable<ISMTPConfig> {\n    return response;\n  }\n\n  @TdGET({\n    path: '/smtp-config',\n  })\n  query(@TdResponse() response?: Observable<ISMTPConfig>): Observable<ISMTPConfig> {\n    return response;\n  }\n\n  @TdDELETE({\n    path: '/smtp-config',\n  })\n  delete(@TdResponse() response?: Observable<void>): Observable<void> {\n    return response;\n  }\n\n  @TdGET({\n    path: '/health',\n  })\n  health(@TdResponse() response?: Observable<HttpResponse<any>>): Observable<boolean> {\n    return response.pipe(\n      catchError((error: HttpErrorResponse) => {\n        return of(false);\n      }),\n      map((res: HttpResponse<any>) => {\n        return !!res;\n      }),\n    );\n  }\n}\n\nexport function VANTAGE_SMTP_PROVIDER_FACTORY(parent: VantageSMTPService): VantageSMTPService {\n  return parent || new VantageSMTPService();\n}\n\nexport const VANTAGE_SMTP_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageSMTPService,\n  deps: [[new Optional(), new SkipSelf(), VantageSMTPService]],\n  useFactory: VANTAGE_SMTP_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VANTAGE_SMTP_PROVIDER } from './smtp/smtp.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [VANTAGE_SMTP_PROVIDER],\n})\nexport class VantageNotificationModule {}\n","import { Optional, SkipSelf, Provider } from '@angular/core';\nimport { HttpParams, HttpHeaders, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { TdHttp, TdGET, TdPUT, TdPOST, TdDELETE, TdParam, TdBody, TdResponse, TdQueryParams } from '@covalent/http';\n\n/*\n * These interfaces are duplicated in the system and the query service.\n * However, within the system service, SystemType includes Aster & Presto.\n * Whereas in the query service, they are excluded.\n * TODO: DRY this up\n */\nexport enum SystemType {\n  Teradata = 'TERADATA',\n  Aster = 'ASTER',\n  Presto = 'PRESTO',\n}\n\nexport const VANTAGE_SYSTEMS_TYPES: SystemType[] = [SystemType.Teradata, SystemType.Aster, SystemType.Presto];\n\nexport interface ISystemAttributes {\n  attributes?: any;\n}\n\nexport interface IAbstractSystem {\n  host?: string;\n  port?: number;\n  system_type?: SystemType;\n  catalog?: string;\n  schema?: string;\n}\n\nexport interface ISystem extends IAbstractSystem {\n  attributes?: string;\n  data_center?: string;\n  environment?: string;\n  id?: string;\n  nickname?: string;\n  platform_id?: number;\n  system_attributes?: ISystemAttributes;\n  version?: string;\n}\n\nexport interface ITestSystem extends IAbstractSystem {\n  account?: string;\n  default_char_set?: string;\n  default_database?: string;\n  log_mech?: string;\n  password?: string;\n  username?: string;\n}\n\n@TdHttp({\n  baseUrl: '/api/system',\n  baseHeaders: new HttpHeaders({ Accept: 'application/json' }),\n})\nexport class VantageSystemService {\n  @TdGET({\n    path: '/health',\n  })\n  health(@TdResponse() response?: Observable<HttpResponse<any>>): Observable<boolean> {\n    return response.pipe(\n      catchError((error: HttpErrorResponse) => {\n        return of(false);\n      }),\n      map((res: HttpResponse<any>) => {\n        return !!res;\n      }),\n    );\n  }\n\n  @TdGET({\n    path: '/systems',\n    options: {\n      observe: 'response',\n    },\n  })\n  query(\n    @TdQueryParams() params?: HttpParams,\n    @TdResponse() response?: Observable<HttpResponse<any>>,\n  ): Observable<{ total: number; data: ISystem[] }> {\n    return response.pipe(\n      map((res: HttpResponse<any>) => {\n        return {\n          total: +res.headers.get('X-Total'),\n          data: <ISystem[]>res.body,\n        };\n      }),\n    );\n  }\n\n  @TdGET({\n    path: '/systems/:id',\n  })\n  get(@TdParam('id') id: string | number, @TdResponse() response?: Observable<ISystem>): Observable<ISystem> {\n    return response;\n  }\n\n  @TdPOST({\n    path: '/systems',\n  })\n  create(@TdBody() system: ISystem, @TdResponse() response?: Observable<ISystem>): Observable<ISystem> {\n    return response;\n  }\n\n  @TdPUT({\n    path: '/systems/:id',\n  })\n  update(\n    @TdParam('id') id: string,\n    @TdBody() system: ISystem,\n    @TdResponse() response?: Observable<ISystem>,\n  ): Observable<ISystem> {\n    return response;\n  }\n\n  @TdDELETE({\n    path: '/systems/:id',\n  })\n  delete(@TdParam('id') id: string, @TdResponse() response?: Observable<void>): Observable<void> {\n    return response;\n  }\n\n  @TdPOST({\n    path: '/testsystem',\n  })\n  test(@TdBody() system: ITestSystem, @TdResponse() response?: Observable<HttpResponse<any>>): Observable<boolean> {\n    return response.pipe(\n      map((res: HttpResponse<any>) => {\n        return true;\n      }),\n    );\n  }\n}\n\nexport function VANTAGE_SYSTEM_PROVIDER_FACTORY(parent: VantageSystemService): VantageSystemService {\n  return parent || new VantageSystemService();\n}\n\nexport const VANTAGE_SYSTEM_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageSystemService,\n  deps: [[new Optional(), new SkipSelf(), VantageSystemService]],\n  useFactory: VANTAGE_SYSTEM_PROVIDER_FACTORY,\n};\n","import { NgModule, Type, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VANTAGE_SYSTEM_PROVIDER } from './system.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [VANTAGE_SYSTEM_PROVIDER],\n})\nexport class VantageSystemModule {}\n","import { Provider, Optional, SkipSelf } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { TdHttp, TdGET, TdPUT, TdPOST, TdPATCH, TdDELETE, TdParam, TdBody, TdResponse } from '@covalent/http';\n\nexport enum LDAPEncription {\n  None = 'NONE',\n}\n\nexport interface ILDAPConfig {\n  allowed_groups?: string[];\n  base_dn?: string;\n  config_id?: number;\n  connectionUrl?: string;\n  email_field?: string;\n  encryption?: LDAPEncription;\n  group_id_field?: string;\n  groups_base_dn?: string;\n  id_field?: string;\n  member_field?: string;\n  member_of_field?: string;\n  name_field?: string;\n  port?: number;\n  search_pass?: string;\n  search_user?: string;\n  server?: string;\n  url?: string;\n}\n\n@TdHttp({\n  baseUrl: '/api/user/ldap/config',\n  baseHeaders: new HttpHeaders({ Accept: 'application/json' }),\n})\nexport class VantageLDAPService {\n  @TdGET({\n    path: '/',\n  })\n  query(@TdResponse() response?: Observable<ILDAPConfig[]>): Observable<ILDAPConfig[]> {\n    return response;\n  }\n\n  @TdPOST({\n    path: '/',\n  })\n  create(@TdBody() body: ILDAPConfig, @TdResponse() response?: Observable<ILDAPConfig>): Observable<ILDAPConfig> {\n    return response;\n  }\n\n  @TdPATCH({\n    path: '/:id',\n  })\n  update(\n    @TdParam('id') id: string | number,\n    @TdBody() body: ILDAPConfig,\n    @TdResponse() response?: Observable<ILDAPConfig>,\n  ): Observable<ILDAPConfig> {\n    return response;\n  }\n\n  @TdDELETE({\n    path: '/:id',\n  })\n  delete(@TdParam('id') id: string | number, @TdResponse() response?: Observable<void>): Observable<void> {\n    return response;\n  }\n\n  @TdPOST({\n    path: '/verify',\n    options: {\n      observe: 'response',\n    },\n  })\n  test(@TdBody() body: ILDAPConfig, @TdResponse() response?: Observable<boolean>): Observable<boolean> {\n    return response.pipe(\n      map((res: any) => {\n        return res.status === 200;\n      }),\n    );\n  }\n}\n\nexport function VANTAGE_LDAP_PROVIDER_FACTORY(parent: VantageLDAPService): VantageLDAPService {\n  return parent || new VantageLDAPService();\n}\n\nexport const VANTAGE_LDAP_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageLDAPService,\n  deps: [[new Optional(), new SkipSelf(), VantageLDAPService]],\n  useFactory: VANTAGE_LDAP_PROVIDER_FACTORY,\n};\n","import { Provider, SkipSelf, Optional } from '@angular/core';\nimport { HttpHeaders, HttpResponse, HttpParams } from '@angular/common/http';\nimport { TdHttp, TdGET, TdResponse, TdParam, TdQueryParams } from '@covalent/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nexport interface IUser {\n  username?: string;\n  password?: string;\n  email?: string;\n  local?: boolean;\n  admin?: boolean;\n  groups?: string[];\n  display_name?: string;\n  access_token?: string;\n  expires_at?: number;\n}\n\n@TdHttp({\n  baseUrl: '/api/user',\n  baseHeaders: new HttpHeaders({\n    Accept: 'application/json',\n  }),\n})\nexport class VantageUserService {\n  /**\n   * get all users\n   */\n  @TdGET({\n    path: '/users',\n    options: {\n      observe: 'response',\n    },\n  })\n  query(\n    @TdQueryParams() queryParams?: HttpParams,\n    @TdResponse() response?: Observable<HttpResponse<any>>,\n  ): Observable<{ total: number; data: IUser[] }> {\n    return response.pipe(\n      catchError((error: Response) => {\n        return of(error);\n      }),\n      map((res: HttpResponse<any>) => {\n        return {\n          total: +res.headers.get('X-Total'),\n          data: <IUser[]>res.body,\n        };\n      }),\n    );\n  }\n\n  /**\n   * gets a single users information\n   */\n  @TdGET({\n    path: '/users/:username',\n    options: {\n      observe: 'response',\n    },\n  })\n  get(@TdParam('username') id: string, @TdResponse() response?: Observable<HttpResponse<any>>): Observable<IUser> {\n    return response.pipe(\n      catchError((error: Response) => {\n        return of(error);\n      }),\n      map((res: HttpResponse<IUser>) => {\n        return res.body;\n      }),\n    );\n  }\n}\n\nexport function VANTAGE_USER_PROVIDER_FACTORY(parent: VantageUserService): VantageUserService {\n  return parent || new VantageUserService();\n}\n\nexport const VANTAGE_USER_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageUserService,\n  deps: [[new Optional(), new SkipSelf(), VantageUserService]],\n  useFactory: VANTAGE_USER_PROVIDER_FACTORY,\n};\n","import { Provider, SkipSelf, Optional } from '@angular/core';\nimport { HttpHeaders, HttpResponse, HttpParams } from '@angular/common/http';\nimport { TdHttp, TdGET, TdResponse, TdQueryParams } from '@covalent/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nexport interface IGroup {\n  name?: string;\n  description?: string;\n  id?: string;\n  display_name?: string;\n  users?: string[];\n}\n\n@TdHttp({\n  baseUrl: '/api/user',\n  baseHeaders: new HttpHeaders({\n    Accept: 'application/json',\n  }),\n})\nexport class VantageGroupService {\n  /**\n   * get groups in paginated form via query string\n   */\n  @TdGET({\n    path: '/groups',\n    options: {\n      observe: 'response',\n    },\n  })\n  query(\n    @TdQueryParams() queryParams?: HttpParams,\n    @TdResponse() response?: Observable<HttpResponse<any>>,\n  ): Observable<{ total: number; data: IGroup[] }> {\n    return response.pipe(\n      catchError((error: Response) => {\n        return of(error);\n      }),\n      map((res: HttpResponse<any>) => {\n        return {\n          total: +res.headers.get('X-Total'),\n          data: <IGroup[]>res.body,\n        };\n      }),\n    );\n  }\n}\n\nexport function VANTAGE_GROUP_PROVIDER_FACTORY(parent: VantageGroupService): VantageGroupService {\n  return parent || new VantageGroupService();\n}\n\nexport const VANTAGE_GROUP_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageGroupService,\n  deps: [[new Optional(), new SkipSelf(), VantageGroupService]],\n  useFactory: VANTAGE_GROUP_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VANTAGE_LDAP_PROVIDER } from './ldap/ldap.service';\nimport { VANTAGE_USER_PROVIDER } from './user/user.service';\nimport { VANTAGE_GROUP_PROVIDER } from './group/group.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [VANTAGE_LDAP_PROVIDER, VANTAGE_USER_PROVIDER, VANTAGE_GROUP_PROVIDER],\n})\nexport class VantageUserModule {}\n","import { Injectable, Provider, Optional, SkipSelf } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n/*\n * These interfaces are duplicated in the system and the query service.\n * However, within the system service, SystemType includes Aster & Presto.\n * Whereas in the query service, they are excluded.\n * TODO: DRY this up\n */\nenum SystemType {\n  Teradata = 'TERADATA',\n}\ninterface ISystemAttributes {\n  attributes?: any;\n}\ninterface IAbstractSystem {\n  host?: string;\n  port?: number;\n  system_type?: SystemType;\n  catalog?: string;\n  schema?: string;\n}\ninterface ISystem extends IAbstractSystem {\n  attributes?: string;\n  data_center?: string;\n  environment?: string;\n  id?: string;\n  nickname?: string;\n  platform_id?: number;\n  system_attributes?: ISystemAttributes;\n  version?: string;\n}\n\nexport interface IQueryPayload {\n  query: string;\n  session?: string;\n  logMech?: string;\n  rowOffset?: number;\n  rowLimit?: number;\n  format?: string; // (default)-object, array, or csv\n  includeColumns?: boolean;\n  includeColumnsTypes?: boolean;\n  spooledResultSet?: boolean;\n  clientId?: string;\n}\n\nexport interface IQueryResultSet {\n  queueDuration: number;\n  queryDuration: number;\n  results: IQueryResultSetResult[];\n}\n\nexport interface IQueryResultSetResult {\n  data: { [name: string]: string }[];\n  resultSet: boolean;\n  rowCount: number;\n  rowLimitExceeded: boolean;\n  columns?: { [name: string]: string }[];\n}\n\nexport interface IQueryInfo {\n  success?: boolean;\n  logTime?: string;\n  error?: any;\n  resultSet?: IQueryResultSet;\n}\n\nexport interface ISQLEConnection {\n  system: ISystem;\n  creds?: string;\n}\n\n@Injectable()\nexport class VantageQueryService {\n  constructor(private _httpClient: HttpClient) {}\n\n  querySystem(connection: ISQLEConnection, payload: IQueryPayload): Observable<IQueryResultSet> {\n    let headers: HttpHeaders = new HttpHeaders()\n      .append('Accept', 'application/vnd.com.teradata.rest-v1.0+json')\n      .append('Content-Type', 'application/json');\n    if (connection.creds) {\n      headers = headers.set('X-Auth-Credentials', 'Basic ' + connection.creds);\n      payload.logMech = connection.system.system_attributes.attributes.log_mech || 'DEFAULT';\n    } else {\n      payload.logMech = 'JWT';\n    }\n    payload.clientId = 'VANTAGE.EDITOR';\n    const request: Observable<object> = this._httpClient.post(\n      '/api/query/tdrest/systems/' + connection.system.nickname + '/queries',\n      payload,\n      { headers },\n    );\n\n    return request.pipe(\n      catchError((error: HttpErrorResponse) => {\n        throw error.error;\n      }),\n      map((resultSet: IQueryResultSet) => {\n        return resultSet;\n      }),\n    );\n  }\n\n  getTableInfo(connection: ISQLEConnection, databaseName: string, tableName: string): Observable<any> {\n    let headers: HttpHeaders = new HttpHeaders()\n      .append('Accept', 'application/vnd.com.teradata.rest-v1.0+json')\n      .append('Content-Type', 'application/json');\n\n    if (connection.creds) {\n      headers = headers.set('X-Auth-Credentials', 'Basic ' + connection.creds);\n    }\n\n    const request: Observable<object> = this._httpClient.get(\n      `/api/query/systems/${connection.system.nickname}/databases/${databaseName}/tables/${tableName}`,\n      { headers },\n    );\n\n    return request.pipe(\n      catchError((error: HttpErrorResponse) => {\n        throw error.error;\n      }),\n      map((resultSet: IQueryResultSet) => {\n        return resultSet;\n      }),\n    );\n  }\n\n  getViewInfo(connection: ISQLEConnection, databaseName: string, viewName: string): Observable<any> {\n    let headers: HttpHeaders = new HttpHeaders()\n      .append('Accept', 'application/vnd.com.teradata.rest-v1.0+json')\n      .append('Content-Type', 'application/json');\n\n    if (connection.creds) {\n      headers = headers.set('X-Auth-Credentials', 'Basic ' + connection.creds);\n    }\n\n    const request: Observable<object> = this._httpClient.get(\n      `/api/query/systems/${connection.system.nickname}/databases/${databaseName}/views/${viewName}`,\n      { headers },\n    );\n\n    return request.pipe(\n      catchError((error: HttpErrorResponse) => {\n        throw error.error;\n      }),\n      map((resultSet: IQueryResultSet) => {\n        return resultSet;\n      }),\n    );\n  }\n\n  getQuery(connection: ISQLEConnection, requestId: string): Observable<any> {\n    let headers: HttpHeaders = new HttpHeaders()\n      .append('Accept', 'application/vnd.com.teradata.rest-v1.0+json')\n      .append('Content-Type', 'application/json');\n    if (connection.creds) {\n      headers = headers.set('X-Auth-Credentials', 'Basic ' + connection.creds);\n    }\n    const request: Observable<object> = this._httpClient.get(\n      '/api/query/tdrest/systems/' + connection.system.nickname + '/queries/' + requestId,\n      { headers },\n    );\n\n    return request.pipe(\n      catchError((error: HttpErrorResponse) => {\n        throw error.error;\n      }),\n      map((resultSet: any) => {\n        return resultSet;\n      }),\n    );\n  }\n\n  getQueries(connection: ISQLEConnection, sessionId: string): Observable<IQueryResultSet> {\n    let headers: HttpHeaders = new HttpHeaders()\n      .append('Accept', 'application/vnd.com.teradata.rest-v1.0+json')\n      .append('Content-Type', 'application/json');\n    if (connection.creds) {\n      headers = headers.set('X-Auth-Credentials', 'Basic ' + connection.creds);\n    }\n    const request: Observable<object> = this._httpClient.get(\n      '/api/query/tdrest/systems/' + connection.system.nickname + '/queries?session=' + sessionId,\n      { headers },\n    );\n\n    return request.pipe(\n      catchError((error: HttpErrorResponse) => {\n        throw error.error;\n      }),\n      map((resultSet: IQueryResultSet) => {\n        return resultSet;\n      }),\n    );\n  }\n\n  getQueryResult(connection: ISQLEConnection, queryId: string): Observable<IQueryResultSet> {\n    let headers: HttpHeaders = new HttpHeaders()\n      .append('Accept', 'application/vnd.com.teradata.rest-v1.0+json')\n      .append('Content-Type', 'application/json');\n    if (connection.creds) {\n      headers = headers.set('X-Auth-Credentials', 'Basic ' + connection.creds);\n    }\n    const request: Observable<object> = this._httpClient.get(\n      '/api/query/tdrest/systems/' + connection.system.nickname + '/queries/' + queryId + '/results',\n      { headers },\n    );\n\n    return request.pipe(\n      catchError((error: HttpErrorResponse) => {\n        throw error.error;\n      }),\n      map((resultSet: IQueryResultSet) => {\n        return resultSet;\n      }),\n    );\n  }\n\n  deleteQuery(connection: ISQLEConnection, queryId: string): Observable<IQueryResultSet> {\n    let headers: HttpHeaders = new HttpHeaders()\n      .append('Accept', 'application/vnd.com.teradata.rest-v1.0+json')\n      .append('Content-Type', 'application/json');\n    if (connection.creds) {\n      headers = headers.set('X-Auth-Credentials', 'Basic ' + connection.creds);\n    }\n    const request: Observable<object> = this._httpClient.delete(\n      '/api/query/tdrest/systems/' + connection.system.nickname + '/queries/' + queryId,\n      { headers },\n    );\n\n    return request.pipe(\n      catchError((error: HttpErrorResponse) => {\n        throw error.error;\n      }),\n      map((resultSet: IQueryResultSet) => {\n        return resultSet;\n      }),\n    );\n  }\n\n  createSession(connection: ISQLEConnection): Observable<any> {\n    const payload: any = {\n      autoCommit: 'true',\n      transactionMode: 'TERA',\n      charSet: 'UTF8',\n    };\n    let headers: HttpHeaders = new HttpHeaders()\n      .append('Accept', 'application/vnd.com.teradata.rest-v1.0+json')\n      .append('Content-Type', 'application/json');\n    if (connection.creds) {\n      headers = headers.set('X-Auth-Credentials', 'Basic ' + connection.creds);\n      payload.logMech = connection.system.system_attributes.attributes.log_mech || 'DEFAULT';\n    } else {\n      payload.logMech = 'JWT';\n    }\n    const request: Observable<object> = this._httpClient.post(\n      '/api/query/tdrest/systems/' + connection.system.nickname + '/sessions',\n      payload,\n      { headers },\n    );\n\n    return request.pipe(\n      catchError((error: HttpErrorResponse) => {\n        throw error.error;\n      }),\n      map((resultSet: any) => {\n        return resultSet;\n      }),\n    );\n  }\n\n  deleteSession(connection: ISQLEConnection, sessionId: string): Observable<any> {\n    let headers: HttpHeaders = new HttpHeaders()\n      .append('Accept', 'application/vnd.com.teradata.rest-v1.0+json')\n      .append('Content-Type', 'application/json');\n    if (connection.creds) {\n      headers = headers.set('X-Auth-Credentials', 'Basic ' + connection.creds);\n    }\n    const request: Observable<object> = this._httpClient.delete(\n      '/api/query/tdrest/systems/' + connection.system.nickname + '/sessions/' + sessionId,\n      { headers },\n    );\n\n    return request.pipe(\n      catchError((error: HttpErrorResponse) => {\n        throw error.error;\n      }),\n      map((resultSet: any) => {\n        return resultSet;\n      }),\n    );\n  }\n}\n\nexport function VANTAGE_QUERY_PROVIDER_FACTORY(\n  parent: VantageQueryService,\n  httpClient: HttpClient,\n): VantageQueryService {\n  return parent || new VantageQueryService(httpClient);\n}\n\nexport const VANTAGE_QUERY_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageQueryService,\n  deps: [[new Optional(), new SkipSelf(), VantageQueryService], HttpClient],\n  useFactory: VANTAGE_QUERY_PROVIDER_FACTORY,\n};\n","import { Injectable, SkipSelf, Optional, Provider } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { VantageQueryService, IQueryResultSet, ISQLEConnection } from './query.service';\n\nexport const sysDatabases: string[] = [\n  'DBC',\n  'dbcmngr',\n  'SQLJ',\n  'SystemFe',\n  'SysAdmin',\n  'SYSBAR',\n  'SYSJDBC',\n  'SYSLIB',\n  'SYSUDTLIB',\n  'TDMaps',\n  'TD_SERVER_DB',\n  'TD_SYSFNLIB',\n  'TD_SYSXML',\n  'Sys_Calendar',\n];\n\nexport interface IDictionarySystem {\n  hostname?: string;\n  password?: string;\n  port?: number;\n  system_id?: string;\n  last_run?: string;\n  interval_minutes?: number;\n  enabled?: boolean;\n  last_attempt?: string;\n  in_collection?: boolean;\n  username?: string;\n}\n\nexport interface IDictionaryDatabase {\n  parent_name?: string;\n  size_bytes?: number;\n  system_id?: string;\n  name?: string;\n  id?: string;\n  type?: string;\n}\n\nexport interface IDictionaryDatabaseObject {\n  system_id?: string;\n  database_id?: string;\n  id?: string;\n  name?: string;\n  size_bytes?: number;\n  type?: string;\n  create_text?: string;\n}\n\nexport interface IDictionaryTableColumn {\n  system_id?: string;\n  database_id?: string;\n  table_id?: string;\n  id?: string;\n  name?: string;\n}\n\n/**\n * FunctionType\n * A - Aggregate\n * B - Aggregate and statistical\n * C - Contract function\n * D - External stored procedure\n * F - Scalar\n * H - User defined method\n * I - Internal type method\n * L - Table operator\n * R - Table Function\n * S - Statistical\n */\n\n/**\n * TableKind for dbc.tablesvx;\n * A - Aggregate function\n * B - Combined aggregate and ordered analytical function\n * C - Table operator parser contract function\n * D - JAR\n * E - External Stored Procedure\n * F - Standard Function\n * G - Trigger\n * H - Instance or contructor method\n * I - Join Index\n * J - Journal\n * K - Foreign Server Object\n * L - User defined table operator\n * M - Macro\n * N - Hash index\n * O - Table with no primary index and no partitioning\n * P - Stored Procedure\n * Q - Queue table\n * R - Table function\n * S - Ordered Analytical function\n * T - table with a primary index or primary AMP index, partitioning or both. Or a partioned table with NoPI;\n * U - User defined type\n * V - View\n * X - Authorization\n * Y - GLOP set\n * Z - UIF - User Installed File\n * 1 - A DATASET schema object created by CREATE SCHEMA\n * 2 - Functon alias object\n */\n\n/**\n * dbc.externalSPs\n * dbc.sessionInfovx\n */\n\n@Injectable()\nexport class VantageDictionaryService {\n  constructor(private _queryService: VantageQueryService) {}\n\n  getViewHelp(connection: ISQLEConnection, database: string, view: string): Observable<any> {\n    const queryStr: string = `\n      LOCK ROW FOR ACCESS\n      SELECT CAST(COUNT(*) AS BIGINT) as cnt\n      FROM ${database}.${view};\n      SHOW VIEW ${database}.${view};\n    `;\n\n    return this._queryService.getViewInfo(connection, database, view).pipe(\n      map((resultSet: any) => {\n        return resultSet.columns.map((column: any) => {\n          return {\n            comment: column.remarks,\n            type: 'column',\n            columnType: column.type,\n            name: column.name,\n            database: resultSet.database,\n            table: resultSet.name,\n          };\n        });\n      }),\n      switchMap((viewInfo: any) => {\n        return this._queryService\n          .querySystem(connection, {\n            query: queryStr,\n          })\n          .pipe(\n            map((resultSet: IQueryResultSet) => {\n              let ddlStatement: string = '';\n              resultSet.results[1].data.forEach((row: any) => {\n                ddlStatement += row['Request Text'];\n              });\n              let count: string;\n              resultSet.results[0].data.forEach((row: any) => {\n                count = row.cnt;\n              });\n\n              const columns: any[] = viewInfo.map((row: any) => {\n                return {\n                  columnName: row.name,\n                  type: row.columnType,\n                };\n              });\n\n              return {\n                database,\n                view,\n                columns,\n                count,\n                ddlStatement,\n              };\n            }),\n          );\n      }),\n    );\n  }\n\n  getTableHelp(connection: ISQLEConnection, database: string, table: string): Observable<any> {\n    const queryStr: string = `\n      LOCK ROW FOR ACCESS\n      SELECT CAST(COUNT(*) AS BIGINT) as cnt\n      FROM ${database}.${table};\n      SHOW TABLE ${database}.${table};\n    `;\n    return this._queryService.getTableInfo(connection, database, table).pipe(\n      map((resultSet: any) => {\n        return resultSet.columns.map((column: any) => {\n          return {\n            comment: column.remarks,\n            type: 'column',\n            columnType: column.type,\n            name: column.name,\n            database: resultSet.database,\n            table: resultSet.name,\n          };\n        });\n      }),\n      switchMap((info: any) => {\n        return this._queryService\n          .querySystem(connection, {\n            query: queryStr,\n          })\n          .pipe(\n            map((resultSet: IQueryResultSet) => {\n              let ddlStatement: string = '';\n              resultSet.results[1].data.forEach((row: any) => {\n                ddlStatement += row['Request Text'];\n              });\n              let count: string;\n              resultSet.results[0].data.forEach((row: any) => {\n                count = row.cnt;\n              });\n              const columns: any[] = info.map((row: any) => {\n                return {\n                  columnName: row.name,\n                  type: row.columnType,\n                };\n              });\n              return {\n                database,\n                table,\n                columns,\n                count,\n                ddlStatement,\n              };\n            }),\n          );\n      }),\n    );\n  }\n\n  getDatabaseFunction(connection: ISQLEConnection, funcName: string): Observable<any> {\n    const queryStr: string = `\n      HELP 'SQL ${funcName}';\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(\n        map((resultSet: IQueryResultSet) => {\n          const stringArray: string[] = resultSet.results[0].data.map((row: any) => {\n            return row['On-Line Help'];\n          });\n          return stringArray.join(' ');\n        }),\n      );\n  }\n\n  getDatabaseFunctions(connection: ISQLEConnection): Observable<any> {\n    const queryStr: string = `\n      HELP 'SQL';\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(\n        map((resultSet: IQueryResultSet) => {\n          const stringArray: string[] = resultSet.results[0].data.map((row: any) => {\n            return row['On-Line Help'];\n          });\n          let sqlHelp: string = stringArray.join(' ');\n          const index: number = sqlHelp.indexOf('FUNCTIONS') + 12;\n          sqlHelp = sqlHelp.substr(index, sqlHelp.length);\n          return sqlHelp\n            .split(' ')\n            .filter((func: string) => {\n              return func;\n            })\n            .map((func: string) => {\n              return {\n                name: func,\n              };\n            });\n        }),\n      );\n  }\n\n  getAnalyticalFunctions(connection: ISQLEConnection): Observable<any> {\n    const queryStr: string = `\n      HELP FOREIGN SCHEMA \"public\"@coprocessor;\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(\n        map((resultSet: IQueryResultSet) => {\n          return resultSet.results[0].data.map((row: any) => {\n            return {\n              name: row.objectname,\n            };\n          });\n        }),\n      );\n  }\n\n  getAnalyticalFunction(connection: ISQLEConnection, analyticalFunction: string): Observable<any> {\n    const queryStr: string = `\n      HELP FOREIGN FUNCTION \"public\".\"${analyticalFunction}\"@coprocessor;\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(\n        map((resultSet: IQueryResultSet) => {\n          let functionName: string = '';\n          let shortDescription: string = '';\n          let longDescription: string = '';\n          let usageSyntax: string = '';\n          let inputColumns: string = '';\n          let outputColumns: string = '';\n          const functionOwner: string = '';\n          const creationTime: string = '';\n          const functionVersion: string = '';\n          const interfacesImplemented: string = '';\n          const stringArray: string[] = resultSet.results[0].data.map((row: any) => {\n            return row['Function Help'];\n          });\n          for (let index: number = 0; index < stringArray.length; index++) {\n            const value: string = stringArray[index];\n            if (value.indexOf('Function Name:') > -1) {\n              for (index++; index < stringArray.indexOf(''); index++) {\n                functionName += stringArray[index] + '\\n';\n              }\n            } else if (value.indexOf('Short Description:') > -1) {\n              for (index++; index < stringArray.indexOf(''); index++) {\n                shortDescription += stringArray[index] + '\\n';\n              }\n            } else if (value.indexOf('Long Description:') > -1) {\n              for (index++; index < stringArray.indexOf(''); index++) {\n                longDescription += stringArray[index] + '\\n';\n              }\n            } else if (value.indexOf('Usage Syntax:') > -1) {\n              for (index++; index < stringArray.indexOf(''); index++) {\n                usageSyntax += stringArray[index] + '\\n';\n              }\n            } else if (value.indexOf('Input Columns:') > -1) {\n              for (index++; index < stringArray.indexOf(''); index++) {\n                inputColumns += stringArray[index] + '\\n';\n              }\n            } else if (value.indexOf('Output Columns:') > -1) {\n              for (index++; index < stringArray.indexOf(''); index++) {\n                outputColumns += stringArray[index] + '\\n';\n              }\n            } else {\n              // Function Owner:\n              // Creation Time:\n              // Function Version:\n              // Interfaces Implemented:\n              if (stringArray.indexOf('') > -1) {\n                index = stringArray.indexOf('');\n                stringArray[index] = undefined;\n              }\n            }\n          }\n          return {\n            functionName,\n            shortDescription,\n            longDescription,\n            usageSyntax,\n            inputColumns,\n            outputColumns,\n          };\n        }),\n      );\n  }\n\n  resultSetPredicate(resultSet: IQueryResultSet): any {\n    return resultSet.results[0].data.map((row: any) => {\n      return {\n        name: row.TableName,\n        requestText: row.RequestText,\n        comment: row.CommentString,\n        kind: row.TableKind,\n      };\n    });\n  }\n\n  getStoredProcedures(connection: ISQLEConnection): Observable<any> {\n    const queryStr: string = `\n      SELECT DataBaseName, TableName, TableKind, RequestText, CommentString FROM dbc.tablesvx\n      WHERE TableKind = 'P'\n      ORDER BY TableName ASC;\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(map(this.resultSetPredicate));\n  }\n\n  getExternalStoredProcedures(connection: ISQLEConnection): Observable<any> {\n    const queryStr: string = `\n      SELECT DataBaseName, TableName, TableKind, RequestText, CommentString FROM dbc.tablesvx\n      WHERE TableKind = 'E'\n      ORDER BY TableName ASC;\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(map(this.resultSetPredicate));\n  }\n\n  getMacros(connection: ISQLEConnection): Observable<any> {\n    const queryStr: string = `\n      SELECT DataBaseName, TableName, TableKind, RequestText, CommentString FROM dbc.tablesvx\n      WHERE TableKind = 'M'\n      ORDER BY TableName ASC;\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(map(this.resultSetPredicate));\n  }\n\n  functionsvxPredicate(resultSet: IQueryResultSet): any {\n    return resultSet.results[0].data.map((row: any) => {\n      return {\n        database: row.DatabaseName,\n        name: row.SpecificName,\n        paramNumber: row.NumParameters,\n        paramDataTypes: row.ParameterDataTypes,\n        requestText: row.RequestText,\n        commentString: row.CommentString,\n        kind: row.TableKind,\n      };\n    });\n  }\n\n  getTableOperators(connection: ISQLEConnection): Observable<any> {\n    const queryStr: string = `\n      SELECT func.DatabaseName, func.FunctionName, func.SpecificName, func.NumParameters,\n      func.ParameterDataTypes, tbl.RequestText, tbl.CommentString, tbl.TableKind\n      FROM dbc.functionsvx as func\n      INNER JOIN dbc.tablesvx as tbl\n      ON tbl.TableName = func.SpecificName\n      AND tbl.DataBaseName = func.DatabaseName\n      WHERE FunctionType = 'L'\n      ORDER BY func.FunctionName ASC;\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(map(this.functionsvxPredicate));\n  }\n\n  getTableFunctions(connection: ISQLEConnection): Observable<any> {\n    const queryStr: string = `\n      SELECT func.DatabaseName, func.FunctionName, func.SpecificName, func.NumParameters,\n      func.ParameterDataTypes, tbl.RequestText, tbl.CommentString, tbl.TableKind\n      FROM dbc.functionsvx as func\n      INNER JOIN dbc.tablesvx as tbl\n      ON tbl.TableName = func.SpecificName\n      AND tbl.DataBaseName = func.DatabaseName\n      WHERE FunctionType = 'R'\n      ORDER BY func.FunctionName ASC;\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(map(this.functionsvxPredicate));\n  }\n\n  getForeignServers(connection: ISQLEConnection): Observable<any[]> {\n    const queryStr: string = `\n      SELECT TableName, TableKind FROM DBC.TABLESVX\n      WHERE DATABASENAME = 'TD_SERVER_DB' AND\n      TABLEKIND = 'K' AND\n      TableName <> 'coprocesor';\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(\n        map((resultSet: IQueryResultSet) => {\n          return resultSet.results[0].data.map((row: any) => {\n            return {\n              name: row.TableName,\n              kind: row.TableKind,\n            };\n          });\n        }),\n      );\n  }\n\n  getForeignSchemas(connection: ISQLEConnection, foreignServer: string): Observable<any[]> {\n    const queryStr: string = `\n      HELP FOREIGN SERVER ${foreignServer};\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(\n        map((resultSet: IQueryResultSet) => {\n          return resultSet.results[0].data.map((row: { Schema: string }) => {\n            return {\n              name: row.Schema,\n              kind: 'NONE',\n            };\n          });\n        }),\n      );\n  }\n\n  getForeignTables(connection: ISQLEConnection, foreignServer: string, schema: string): Observable<any[]> {\n    const queryStr: string = `\n      HELP FOREIGN DATABASE \"${schema}\"@${foreignServer};\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(\n        map((resultSet: IQueryResultSet) => {\n          return resultSet.results[0].data.map((row: { Table: string }) => {\n            return {\n              name: row.Table,\n              kind: 'NONE',\n            };\n          });\n        }),\n      );\n  }\n\n  getForeignColumns(\n    connection: ISQLEConnection,\n    foreignServer: string,\n    schema: string,\n    table: string,\n  ): Observable<any[]> {\n    const queryStr: string = `\n      HELP FOREIGN TABLE \"${schema}\".\"${table}\"@${foreignServer};\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(\n        map((resultSet: IQueryResultSet) => {\n          return resultSet.results[0].data.map((row: { Column: string; Type: string }) => {\n            return {\n              name: row.Column,\n              type: row.Type,\n            };\n          });\n        }),\n      );\n  }\n\n  getDatabases(connection: ISQLEConnection): Observable<any[]> {\n    const queryStr: string =\n      'SELECT databasename, PermSpace, SpoolSpace, TempSpace, CommentString, DBKind FROM dbc.databasesVX ORDER BY databasename;';\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(\n        map((resultSet: IQueryResultSet) => {\n          return resultSet.results[0].data.map((row: any) => {\n            return {\n              name: row.DatabaseName || row.schemaname,\n              type: row.DBKind === 'U' ? 'user' : 'database',\n              permSpace: row.PermSpace,\n              spoolSpace: row.SpoolSpace,\n              tempSpace: row.TempSpace,\n              comment: row.CommentString,\n            };\n          });\n        }),\n      );\n  }\n\n  getDatabaseObjects(connection: ISQLEConnection, databaseId: string): Observable<any[]> {\n    const queryStr: string = `SELECT DataBaseName, TableName, TableKind, CommentString FROM dbc.tablesvx\n       WHERE TableKind in ('T', 'O', 'V') AND DataBaseName = '${databaseId}' ORDER BY TableName ASC;`;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(\n        map((resultSet: IQueryResultSet) => {\n          return resultSet.results[0].data.map((row: any) => {\n            const type: string = row.TableKind || row.tablekind;\n            return {\n              kind: row.TableKind || row.tablekind,\n              type: type === 'V' ? 'view' : 'table',\n              name: row.TableName || row.tablename,\n              database: row.DataBaseName || row.databasename,\n              comment: row.CommentString,\n            };\n          });\n        }),\n      );\n  }\n\n  getTableColumns(type: string, connection: ISQLEConnection, databaseId: string, tableId: string): Observable<any> {\n    if (type === 'table') {\n      return this._queryService.getTableInfo(connection, databaseId, tableId).pipe(\n        map((resultSet: any) => {\n          return resultSet.columns.map((column: any) => {\n            return {\n              comment: column.remarks,\n              type: 'column',\n              columnType: column.type,\n              name: column.name,\n              database: resultSet.database,\n              table: resultSet.name,\n            };\n          });\n        }),\n      );\n    } else if (type === 'view') {\n      return this._queryService.getViewInfo(connection, databaseId, tableId).pipe(\n        map((resultSet: any) => {\n          return resultSet.columns.map((column: any) => {\n            return {\n              comment: column.remarks,\n              type: 'column',\n              columnType: column.type,\n              name: column.name,\n              database: resultSet.database,\n              table: resultSet.name,\n            };\n          });\n        }),\n      );\n    }\n  }\n\n  search(\n    connection: ISQLEConnection,\n    searchStr: string,\n    options: {\n      databases: boolean;\n      objects: boolean;\n      columns: boolean;\n    } = {\n      databases: true,\n      objects: true,\n      columns: true,\n    },\n  ): Observable<any[]> {\n    const queries: string[] = [];\n    if (options.databases) {\n      const dbQuery: string = `\n        SELECT\n            DatabaseName as objectName,\n            'database' as objectType,\n            DBKind as kind,\n            CommentString\n        FROM dbc.databasesvx\n        WHERE DatabaseName LIKE '%${searchStr}%'\n        AND DataBaseName NOT IN ('${sysDatabases.join(\"', '\")}')\n      `;\n      queries.push(dbQuery);\n    }\n    if (options.objects) {\n      const objectQuery: string = `\n        SELECT\n            DataBaseName || '~|~' || TableName as objectName,\n            'object' as objectType,\n            TableKind as kind,\n            CommentString\n        FROM dbc.tablesvx\n        WHERE TableKind in ('T', 'O', 'V')\n        AND TableName LIKE '%${searchStr}%'\n        AND DataBaseName NOT IN ('${sysDatabases.join(\"', '\")}')\n      `;\n      queries.push(objectQuery);\n    }\n    if (options.objects) {\n      const columnQuery: string = `\n        SELECT\n            DataBaseName || '~|~' || TableName || '~|~' || ColumnName as objectName,\n            'column' as objectType,\n            ColumnType as kind,\n            CommentString\n        FROM dbc.columnsVX\n        WHERE columnname LIKE '%${searchStr}%'\n        AND DataBaseName NOT IN ('${sysDatabases.join(\"', '\")}')\n      `;\n      queries.push(columnQuery);\n    }\n    const unionJoin: string = queries.join('UNION');\n    const queryStr: string = `\n      WITH quick_search AS (\n          ${unionJoin}\n      )\n      SELECT * FROM quick_search\n      ORDER BY 1\n      SAMPLE 100;\n    `;\n    return this._queryService\n      .querySystem(connection, {\n        query: queryStr,\n      })\n      .pipe(\n        map((resultSet: IQueryResultSet) => {\n          return resultSet.results[0].data.map((row: any) => {\n            let kind: string = row.kind;\n            // map to proper type/kind\n            if (row.objectType === 'column') {\n              kind = 'column';\n            } else if (row.objectType === 'database') {\n              kind = kind === 'D' ? 'database' : 'user';\n            } else {\n              kind = kind === 'V' ? 'view' : 'table';\n            }\n            const newParent: string[] = [];\n            // split name and parents..\n            const nameSplit: string[] = row.objectName.split('~|~');\n            for (let index: number = 0; index < nameSplit.length - 1; index++) {\n              newParent.push('\"' + nameSplit[index] + '\"');\n            }\n            return {\n              parent: newParent.join('.'),\n              name: nameSplit[nameSplit.length - 1],\n              kind,\n              type: row.objectType,\n              comment: row.CommentString,\n            };\n          });\n        }),\n      );\n  }\n}\n\nexport function VANTAGE_DICTIONARY_PROVIDER_FACTORY(\n  parent: VantageDictionaryService,\n  queryService: VantageQueryService,\n): VantageDictionaryService {\n  return parent || new VantageDictionaryService(queryService);\n}\n\nexport const VANTAGE_DICTIONARY_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageDictionaryService,\n  deps: [[new Optional(), new SkipSelf(), VantageDictionaryService], VantageQueryService],\n  useFactory: VANTAGE_DICTIONARY_PROVIDER_FACTORY,\n};\n","import { Injectable, Optional, SkipSelf, Provider } from '@angular/core';\nimport { retry, timeout } from 'rxjs/operators';\nimport { ISQLEConnection, VantageQueryService } from './query.service';\n\nconst CONNECTION_SESSION_KEY: string = 'vantage.editor.connection';\n\n@Injectable()\nexport class VantageConnectionService {\n  constructor(private _queryService: VantageQueryService) {}\n\n  public get current(): ISQLEConnection {\n    return JSON.parse(sessionStorage.getItem(CONNECTION_SESSION_KEY));\n  }\n\n  public disconnect(): void {\n    sessionStorage.removeItem(CONNECTION_SESSION_KEY);\n  }\n\n  public async connect(connection: ISQLEConnection): Promise<void> {\n    // clear connection before starting a new one\n    this.disconnect();\n    // test connection with SELECT 1\n    await this._queryService\n      .querySystem(connection, { query: 'SELECT 1;' })\n      .pipe(timeout(7000), retry(1))\n      .toPromise();\n    // if successful, save\n    this.store(connection);\n  }\n\n  private store({ system, creds }: ISQLEConnection): void {\n    sessionStorage.setItem(CONNECTION_SESSION_KEY, JSON.stringify({ system, creds }));\n  }\n}\n\nexport function VANTAGE_CONNECTION_PROVIDER_FACTORY(\n  parent: VantageConnectionService,\n  queryService: VantageQueryService,\n): VantageConnectionService {\n  return parent || new VantageConnectionService(queryService);\n}\n\nexport const VANTAGE_CONNECTION_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageConnectionService,\n  deps: [[new Optional(), new SkipSelf(), VantageConnectionService], VantageQueryService],\n  useFactory: VANTAGE_CONNECTION_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VANTAGE_CONNECTION_PROVIDER } from './connection.service';\nimport { VANTAGE_DICTIONARY_PROVIDER } from './dictionary.service';\nimport { VANTAGE_QUERY_PROVIDER } from './query.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [VANTAGE_CONNECTION_PROVIDER, VANTAGE_DICTIONARY_PROVIDER, VANTAGE_QUERY_PROVIDER],\n})\nexport class VantageSQLEModule {}\n","import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\n\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { TdDialogService, IAlertConfig, TdAlertDialogComponent } from '@covalent/core/dialogs';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nexport class VantageError {\n  message: string;\n  error: number;\n}\n\n@Injectable()\nexport class VantageErrorService {\n  constructor(private _dialogService: TdDialogService, private _translate: TranslateService) {}\n\n  open(error: VantageError): MatDialogRef<TdAlertDialogComponent> {\n    if (error) {\n      const config: IAlertConfig = {\n        title: this._translate.instant('THERE_WAS_A_PROBLEM'),\n        message: error.message,\n        disableClose: true,\n        closeButton: this._translate.instant('CLOSE'),\n      };\n      if (error.error) {\n        config.message += ` (${error.error.toString()})`;\n      }\n      if (config.message || config.title) {\n        return this._dialogService.openAlert(config);\n      }\n    }\n  }\n}\n\nexport function VANTAGE_ERROR_PROVIDER_FACTORY(\n  parent: VantageErrorService,\n  dialogService: TdDialogService,\n  translate: TranslateService,\n): VantageErrorService {\n  return parent || new VantageErrorService(dialogService, translate);\n}\n\nexport const VANTAGE_ERROR_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageErrorService,\n  deps: [[new Optional(), new SkipSelf(), VantageErrorService], TdDialogService, TranslateService],\n  useFactory: VANTAGE_ERROR_PROVIDER_FACTORY,\n};\n","import { Injectable, Provider, Optional, SkipSelf } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { TdMediaService } from '@covalent/core/media';\n\n@Injectable()\nexport class VantageToastService {\n  constructor(private _snackBarService: MatSnackBar, private _media: TdMediaService) {}\n\n  open(message: string, time: number = 3000): void {\n    if (message) {\n      this._snackBarService.open(message, undefined, {\n        duration: time,\n        horizontalPosition: this._media && this._media.query('gt-sm') ? 'end' : 'center',\n      });\n    }\n  }\n}\n\nexport function VANTAGE_TOAST_PROVIDER_FACTORY(\n  parent: VantageToastService,\n  snackBar: MatSnackBar,\n  media: TdMediaService,\n): VantageToastService {\n  return parent || new VantageToastService(snackBar, media);\n}\n\nexport const VANTAGE_TOAST_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageToastService,\n  deps: [[new Optional(), new SkipSelf(), VantageToastService], MatSnackBar, [new Optional(), TdMediaService]],\n  useFactory: VANTAGE_TOAST_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { CovalentDialogsModule } from '@covalent/core/dialogs';\nimport { CovalentMediaModule } from '@covalent/core/media';\n\nimport { VANTAGE_ERROR_PROVIDER } from './error/error.service';\nimport { VANTAGE_TOAST_PROVIDER } from './toast/toast.service';\n\n@NgModule({\n  imports: [CommonModule, MatSnackBarModule, CovalentDialogsModule, CovalentMediaModule],\n  providers: [VANTAGE_ERROR_PROVIDER, VANTAGE_TOAST_PROVIDER],\n})\nexport class VantageUserFeedbackModule {}\n","import { Injectable, Renderer2, Inject, RendererFactory2 } from '@angular/core';\nimport { fromEvent, BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\nconst THEME_LOCAL_STORAGE_KEY: string = 'vantage.theme';\n\nexport enum VantageTheme {\n  DARK = 'dark-theme',\n  LIGHT = 'light-theme',\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VantageThemeService {\n  private _renderer2: Renderer2;\n\n  private readonly _activeThemeSubject: BehaviorSubject<VantageTheme> = new BehaviorSubject<VantageTheme>(\n    <VantageTheme>localStorage.getItem(THEME_LOCAL_STORAGE_KEY),\n  );\n  readonly activeTheme$: Observable<VantageTheme> = this._activeThemeSubject.asObservable();\n\n  constructor(@Inject(DOCUMENT) private _document: any, private rendererFactory: RendererFactory2) {\n    this._renderer2 = rendererFactory.createRenderer(undefined, undefined);\n    fromEvent(window, 'storage')\n      .pipe(filter((event: StorageEvent) => event.key === THEME_LOCAL_STORAGE_KEY))\n      .subscribe((event: StorageEvent) => this.applyTheme(<VantageTheme>event.newValue));\n  }\n\n  private get activeTheme(): VantageTheme {\n    return this._activeThemeSubject.getValue();\n  }\n\n  private set activeTheme(theme: VantageTheme) {\n    this._activeThemeSubject.next(theme);\n  }\n\n  public get darkThemeIsActive(): boolean {\n    return this.activeTheme === VantageTheme.DARK;\n  }\n  public get lightThemeIsActive(): boolean {\n    return this.activeTheme === VantageTheme.LIGHT;\n  }\n\n  public applyLightTheme(): void {\n    this.applyTheme(VantageTheme.LIGHT);\n  }\n  public applyDarkTheme(): void {\n    this.applyTheme(VantageTheme.DARK);\n  }\n\n  private applyTheme(theme: VantageTheme): void {\n    this._renderer2.removeClass(\n      this._document.querySelector('html'),\n      theme === VantageTheme.DARK ? VantageTheme.LIGHT : VantageTheme.DARK,\n    );\n    localStorage.setItem(THEME_LOCAL_STORAGE_KEY, theme);\n    this._renderer2.addClass(this._document.querySelector('html'), theme);\n    this.activeTheme = <VantageTheme>localStorage.getItem(THEME_LOCAL_STORAGE_KEY);\n  }\n}\n"],"names":["map","catchError","of","TdGET","TdQueryParams","TdResponse","HttpParams","Observable","TdPOST","TdBody","TdParam","TdHttp","HttpHeaders","Optional","SkipSelf","NgModule","CommonModule","TdPUT","TdDELETE","TdPATCH","ISystemAttributes","IAbstractSystem","ISystem","Injectable","HttpClient","switchMap","timeout","retry","TdDialogService","TranslateService","MatSnackBar","TdMediaService","MatSnackBarModule","CovalentDialogsModule","CovalentMediaModule","BehaviorSubject","fromEvent","filter","Inject","DOCUMENT","RendererFactory2"],"mappings":"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"}