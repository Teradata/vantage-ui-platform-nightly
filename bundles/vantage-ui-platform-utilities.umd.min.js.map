{"version":3,"sources":["ng://@vantage/ui-platform/utilities/user-feedback/error/error.service.ts","ng://@vantage/ui-platform/utilities/user-feedback/toast/toast.service.ts","ng://@vantage/ui-platform/utilities/user-feedback/user-feedback.module.ts"],"names":["VantageError","VantageErrorService","_dialogService","_translate","this","prototype","open","error","config","title","instant","message","disableClose","closeButton","toString","openAlert","Injectable","TdDialogService","TranslateService","VANTAGE_ERROR_PROVIDER_FACTORY","parent","dialogService","translate","VANTAGE_ERROR_PROVIDER","provide","deps","Optional","SkipSelf","useFactory","VantageToastService","_snackBarService","_media","time","undefined","duration","horizontalPosition","query","MatSnackBar","TdMediaService","VANTAGE_TOAST_PROVIDER_FACTORY","snackBar","media","VANTAGE_TOAST_PROVIDER","VantageUserFeedbackModule","NgModule","args","imports","CommonModule","MatSnackBarModule","CovalentDialogsModule","CovalentMediaModule","providers"],"mappings":"mxBAAA,IAAAA,EAAA,WAWA,OAHA,aARA,gBAgBE,SAAAC,EAAoBC,EACAC,GADAC,KAAAF,eAAAA,EACAE,KAAAD,WAAAA,EAmBtB,OAjBEF,EAAAI,UAAAC,KAAA,SAAKC,GACH,GAAIA,EAAO,KACLC,EAAuB,CACzBC,MAAOL,KAAKD,WAAWO,QAAQ,uBAC/BC,QAASJ,EAAMI,QACfC,cAAc,EACdC,YAAaT,KAAKD,WAAWO,QAAQ,UAKvC,GAHIH,EAAMA,QACRC,EAAOG,SAAW,KAAKJ,EAAMA,MAAMO,WAAU,KAE3CN,EAAOG,SAAWH,EAAOC,MAC3B,OAAOL,KAAKF,eAAea,UAAUP,yBAlB5CQ,EAAAA,sDATQC,EAAAA,uBAEAC,EAAAA,oBA8BTjB,KAEA,SAAgBkB,EACdC,EAA6BC,EAAgCC,GAC7D,OAAOF,GAAU,IAAInB,EAAoBoB,EAAeC,GAG1D,IAAaC,EAAmC,CAE9CC,QAASvB,EACTwB,KAAM,CAAC,CAAC,IAAIC,EAAAA,SAAY,IAAIC,EAAAA,SAAY1B,GAAsBgB,EAAAA,gBAAiBC,EAAAA,kBAC/EU,WAAYT,GC/CdU,EAAA,WASE,SAAAA,EAAoBC,EACAC,GADA3B,KAAA0B,iBAAAA,EACA1B,KAAA2B,OAAAA,EAWtB,OATEF,EAAAxB,UAAAC,KAAA,SAAKK,EAAiBqB,QAAA,IAAAA,IAAAA,EAAA,KAChBrB,GACFP,KAAK0B,iBAAiBxB,KAAKK,EAASsB,UAAW,CAC7CC,SAAUF,EACVG,mBAAoB/B,KAAK2B,QAAU3B,KAAK2B,OAAOK,MAAM,SAAW,MAAQ,gCAV/EpB,EAAAA,sDAJQqB,EAAAA,mBAEAC,EAAAA,kBAiBTT,EArBA,GAuBA,SAAgBU,EACdnB,EAA6BoB,EAAuBC,GACpD,OAAOrB,GAAU,IAAIS,EAAoBW,EAAUC,GAGrD,IAAaC,EAAmC,CAE9ClB,QAASK,EACTJ,KAAM,CAAC,CAAC,IAAIC,EAAAA,SAAY,IAAIC,EAAAA,SAAYE,GAAsBQ,EAAAA,YAAa,CAAC,IAAIX,EAAAA,SAAYY,EAAAA,iBAC5FV,WAAYW,GChCdI,EAAA,WAYA,SAAAA,KAcA,2BAdCC,EAAAA,SAAQC,KAAA,CAAC,CACRC,QAAS,CACPC,EAAAA,aACAC,EAAAA,kBACAC,EAAAA,sBACAC,EAAAA,qBAEFC,UAAW,CACT5B,EACAmB,OAKJC,EA1BA","sourcesContent":["import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\n\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { TdDialogService, IAlertConfig, TdAlertDialogComponent } from '@covalent/core/dialogs';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nexport class VantageError {\n  message: string;\n  error: number;\n}\n\n@Injectable()\nexport class VantageErrorService {\n\n  constructor(private _dialogService: TdDialogService,\n              private _translate: TranslateService) {}\n\n  open(error: VantageError): MatDialogRef<TdAlertDialogComponent> {\n    if (error) {\n      let config: IAlertConfig = {\n        title: this._translate.instant('THERE_WAS_A_PROBLEM'),\n        message: error.message,\n        disableClose: true,\n        closeButton: this._translate.instant('CLOSE'),\n      };\n      if (error.error) {\n        config.message += ` (${error.error.toString()})`;\n      }\n      if (config.message || config.title) {\n        return this._dialogService.openAlert(config);\n      }\n    }\n  }\n\n}\n\nexport function VANTAGE_ERROR_PROVIDER_FACTORY(\n  parent: VantageErrorService, dialogService: TdDialogService, translate: TranslateService): VantageErrorService {\n  return parent || new VantageErrorService(dialogService, translate);\n}\n\nexport const VANTAGE_ERROR_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageErrorService,\n  deps: [[new Optional(), new SkipSelf(), VantageErrorService], TdDialogService, TranslateService],\n  useFactory: VANTAGE_ERROR_PROVIDER_FACTORY,\n};\n","import { Injectable, Provider, Optional, SkipSelf } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { TdMediaService } from '@covalent/core/media';\n\n@Injectable()\nexport class VantageToastService {\n\n  constructor(private _snackBarService: MatSnackBar,\n              private _media: TdMediaService) { }\n\n  open(message: string, time: number = 3000): void {\n    if (message) {\n      this._snackBarService.open(message, undefined, {\n        duration: time,\n        horizontalPosition: this._media && this._media.query('gt-sm') ? 'end' : 'center',\n      });\n    }\n  }\n\n}\n\nexport function VANTAGE_TOAST_PROVIDER_FACTORY(\n  parent: VantageToastService, snackBar: MatSnackBar, media: TdMediaService): VantageToastService {\n  return parent || new VantageToastService(snackBar, media);\n}\n\nexport const VANTAGE_TOAST_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageToastService,\n  deps: [[new Optional(), new SkipSelf(), VantageToastService], MatSnackBar, [new Optional(), TdMediaService]],\n  useFactory: VANTAGE_TOAST_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { CovalentDialogsModule } from '@covalent/core/dialogs';\nimport { CovalentMediaModule } from '@covalent/core/media';\n\nimport { VANTAGE_ERROR_PROVIDER } from './error/error.service';\nimport { VANTAGE_TOAST_PROVIDER } from './toast/toast.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatSnackBarModule,\n    CovalentDialogsModule,\n    CovalentMediaModule,\n  ],\n  providers: [\n    VANTAGE_ERROR_PROVIDER,\n    VANTAGE_TOAST_PROVIDER,\n  ],\n})\nexport class VantageUserFeedbackModule {\n\n}\n"]}