{"version":3,"sources":["ng://@td-vantage/ui-platform/theme/theme.service.ts","ng://@td-vantage/ui-platform/theme/theme.module.ts"],"names":["DARK","LIGHT","VantageThemeService","rendererFactory","_document","_this","this","_activeThemeSubject","BehaviorSubject","localStorage","getItem","activeTheme$","asObservable","_renderer2","createRenderer","undefined","fromEvent","window","pipe","filter","event","key","subscribe","applyTheme","Object","defineProperty","prototype","getValue","theme","next","activeTheme","VantageTheme","applyLightTheme","applyDarkTheme","toggleTheme","removeClass","querySelector","setItem","addClass","Injectable","RendererFactory2","Inject","args","DOCUMENT","VANTAGE_THEME_PROVIDER_FACTORY","parent","VANTAGE_THEME_PROVIDER","provide","deps","Optional","SkipSelf","useFactory","VantageThemeModule","NgModule","imports","CommonModule","providers"],"mappings":"6jBAQEA,KAAO,aACPC,MAAQ,4BAWR,SAAAC,EAAoBC,EAA6DC,GAAjF,IAAAC,EAAAC,KAAoBA,KAAAH,gBAAAA,EAA6DG,KAAAF,UAAAA,EAJhEE,KAAAC,oBAAqD,IAAIC,EAAAA,gBAC1DC,aAAaC,QAZS,kBAc7BJ,KAAAK,aAAyCL,KAAKC,oBAAoBK,eAEzEN,KAAKO,WAAaV,EAAgBW,oBAAeC,OAAWA,GAC5DC,EAAAA,UAAUC,OAAQ,WACfC,KAAKC,EAAAA,QAAM,SAAEC,GAAwB,MAlBJ,kBAkBIA,EAAMC,QAC3CC,WAAS,SAAEF,GAAwB,OAAAf,EAAKkB,WAAyBH,EAAc,aAuCtF,OApCEI,OAAAC,eAAYvB,EAAAwB,UAAA,cAAW,KAAvB,WACE,OAAOpB,KAAKC,oBAAoBoB,gBAGlC,SAAwBC,GACtBtB,KAAKC,oBAAoBsB,KAAKD,oCAGhCJ,OAAAC,eAAWvB,EAAAwB,UAAA,oBAAiB,KAA5B,WACE,OAAOpB,KAAKwB,cAAgBC,EAAa/B,sCAE3CwB,OAAAC,eAAWvB,EAAAwB,UAAA,qBAAkB,KAA7B,WACE,OAAOpB,KAAKwB,cAAgBC,EAAa9B,uCAGpCC,EAAAwB,UAAAM,gBAAP,WACE1B,KAAKiB,WAAWQ,EAAa9B,QAGxBC,EAAAwB,UAAAO,eAAP,WACE3B,KAAKiB,WAAWQ,EAAa/B,OAGxBE,EAAAwB,UAAAQ,YAAP,WACE5B,KAAKwB,cAAgBC,EAAa/B,KAAOM,KAAK0B,kBAAoB1B,KAAK2B,kBAGjE/B,EAAAwB,UAAAH,WAAR,SAAmBK,GACjBtB,KAAKO,WAAWsB,YACd7B,KAAKF,UAAUgC,cAAc,QAC7BR,IAAUG,EAAa/B,KAAO+B,EAAa9B,MAAQ8B,EAAa/B,MAElES,aAAa4B,QAtDuB,gBAsDUT,GAC9CtB,KAAKO,WAAWyB,SAAShC,KAAKF,UAAUgC,cAAc,QAASR,GAC/DtB,KAAKwB,YAA4BrB,aAAaC,QAxDV,sCAOvC6B,EAAAA,sDAZuCC,EAAAA,iDAoBkBC,EAAAA,OAAMC,KAAA,CAACC,EAAAA,eA2CjEzC,cAEgB0C,EACdC,EACA1C,EACAC,GAEA,OAAOyC,GAAU,IAAI3C,EAAoBC,EAAiBC,OAG/C0C,EAAmC,CAE9CC,QAAS7C,EACT8C,KAAM,CAAC,CAAC,IAAIC,EAAAA,SAAY,IAAIC,EAAAA,SAAYhD,GAAsB,CAACsC,EAAAA,kBAAmB,CAACG,EAAAA,WACnFQ,WAAYP,gBCzEd,SAAAQ,KAIiC,2BAJhCC,EAAAA,SAAQX,KAAA,CAAC,CACRY,QAAS,CAACC,EAAAA,cACVC,UAAW,CAACV,OAEmBM","sourcesContent":["import { Injectable, Renderer2, Inject, RendererFactory2, Provider, Optional, SkipSelf } from '@angular/core';\nimport { fromEvent, BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\nconst THEME_LOCAL_STORAGE_KEY: string = 'vantage.theme';\n\nexport enum VantageTheme {\n  DARK = 'dark-theme',\n  LIGHT = 'light-theme',\n}\n\n@Injectable()\nexport class VantageThemeService {\n  private _renderer2: Renderer2;\n\n  private readonly _activeThemeSubject: BehaviorSubject<VantageTheme> = new BehaviorSubject<VantageTheme>(\n    <VantageTheme>localStorage.getItem(THEME_LOCAL_STORAGE_KEY),\n  );\n  readonly activeTheme$: Observable<VantageTheme> = this._activeThemeSubject.asObservable();\n  constructor(private rendererFactory: RendererFactory2, @Inject(DOCUMENT) private _document: any) {\n    this._renderer2 = rendererFactory.createRenderer(undefined, undefined);\n    fromEvent(window, 'storage')\n      .pipe(filter((event: StorageEvent) => event.key === THEME_LOCAL_STORAGE_KEY))\n      .subscribe((event: StorageEvent) => this.applyTheme(<VantageTheme>event.newValue));\n  }\n\n  private get activeTheme(): VantageTheme {\n    return this._activeThemeSubject.getValue();\n  }\n\n  private set activeTheme(theme: VantageTheme) {\n    this._activeThemeSubject.next(theme);\n  }\n\n  public get darkThemeIsActive(): boolean {\n    return this.activeTheme === VantageTheme.DARK;\n  }\n  public get lightThemeIsActive(): boolean {\n    return this.activeTheme === VantageTheme.LIGHT;\n  }\n\n  public applyLightTheme(): void {\n    this.applyTheme(VantageTheme.LIGHT);\n  }\n\n  public applyDarkTheme(): void {\n    this.applyTheme(VantageTheme.DARK);\n  }\n\n  public toggleTheme(): void {\n    this.activeTheme === VantageTheme.DARK ? this.applyLightTheme() : this.applyDarkTheme();\n  }\n\n  private applyTheme(theme: VantageTheme): void {\n    this._renderer2.removeClass(\n      this._document.querySelector('html'),\n      theme === VantageTheme.DARK ? VantageTheme.LIGHT : VantageTheme.DARK,\n    );\n    localStorage.setItem(THEME_LOCAL_STORAGE_KEY, theme);\n    this._renderer2.addClass(this._document.querySelector('html'), theme);\n    this.activeTheme = <VantageTheme>localStorage.getItem(THEME_LOCAL_STORAGE_KEY);\n  }\n}\n\nexport function VANTAGE_THEME_PROVIDER_FACTORY(\n  parent: VantageThemeService,\n  rendererFactory: RendererFactory2,\n  _document: any,\n): VantageThemeService {\n  return parent || new VantageThemeService(rendererFactory, _document);\n}\n\nexport const VANTAGE_THEME_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageThemeService,\n  deps: [[new Optional(), new SkipSelf(), VantageThemeService], [RendererFactory2], [DOCUMENT]],\n  useFactory: VANTAGE_THEME_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VANTAGE_THEME_PROVIDER } from './theme.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [VANTAGE_THEME_PROVIDER],\n})\nexport class VantageThemeModule {}\n"]}