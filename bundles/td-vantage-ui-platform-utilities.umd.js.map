{"version":3,"file":"td-vantage-ui-platform-utilities.umd.js","sources":["ng://@td-vantage/ui-platform/utilities/user-feedback/error/error.service.ts","ng://@td-vantage/ui-platform/utilities/user-feedback/toast/toast.service.ts","ng://@td-vantage/ui-platform/utilities/user-feedback/user-feedback.module.ts"],"sourcesContent":["import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\n\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { TdDialogService, IAlertConfig, TdAlertDialogComponent } from '@covalent/core/dialogs';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nexport class VantageError {\n  message: string;\n  error: number;\n}\n\n@Injectable()\nexport class VantageErrorService {\n  constructor(private _dialogService: TdDialogService, private _translate: TranslateService) {}\n\n  open(error: VantageError): MatDialogRef<TdAlertDialogComponent> {\n    if (error) {\n      const config: IAlertConfig = {\n        title: this._translate.instant('THERE_WAS_A_PROBLEM'),\n        message: error.message,\n        disableClose: true,\n        closeButton: this._translate.instant('CLOSE'),\n      };\n      if (error.error) {\n        config.message += ` (${error.error.toString()})`;\n      }\n      if (config.message || config.title) {\n        return this._dialogService.openAlert(config);\n      }\n    }\n  }\n}\n\nexport function VANTAGE_ERROR_PROVIDER_FACTORY(\n  parent: VantageErrorService,\n  dialogService: TdDialogService,\n  translate: TranslateService,\n): VantageErrorService {\n  return parent || new VantageErrorService(dialogService, translate);\n}\n\nexport const VANTAGE_ERROR_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageErrorService,\n  deps: [[new Optional(), new SkipSelf(), VantageErrorService], TdDialogService, TranslateService],\n  useFactory: VANTAGE_ERROR_PROVIDER_FACTORY,\n};\n","import { Injectable, Provider, Optional, SkipSelf } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { TdMediaService } from '@covalent/core/media';\n\n@Injectable()\nexport class VantageToastService {\n  constructor(private _snackBarService: MatSnackBar, private _media: TdMediaService) {}\n\n  open(message: string, time: number = 3000): void {\n    if (message) {\n      this._snackBarService.open(message, undefined, {\n        duration: time,\n        horizontalPosition: this._media && this._media.query('gt-sm') ? 'end' : 'center',\n      });\n    }\n  }\n}\n\nexport function VANTAGE_TOAST_PROVIDER_FACTORY(\n  parent: VantageToastService,\n  snackBar: MatSnackBar,\n  media: TdMediaService,\n): VantageToastService {\n  return parent || new VantageToastService(snackBar, media);\n}\n\nexport const VANTAGE_TOAST_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageToastService,\n  deps: [[new Optional(), new SkipSelf(), VantageToastService], MatSnackBar, [new Optional(), TdMediaService]],\n  useFactory: VANTAGE_TOAST_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { CovalentDialogsModule } from '@covalent/core/dialogs';\nimport { CovalentMediaModule } from '@covalent/core/media';\n\nimport { VANTAGE_ERROR_PROVIDER } from './error/error.service';\nimport { VANTAGE_TOAST_PROVIDER } from './toast/toast.service';\n\n@NgModule({\n  imports: [CommonModule, MatSnackBarModule, CovalentDialogsModule, CovalentMediaModule],\n  providers: [VANTAGE_ERROR_PROVIDER, VANTAGE_TOAST_PROVIDER],\n})\nexport class VantageUserFeedbackModule {}\n"],"names":["Injectable","TdDialogService","TranslateService","Optional","SkipSelf","MatSnackBar","TdMediaService","NgModule","CommonModule","MatSnackBarModule","CovalentDialogsModule","CovalentMediaModule"],"mappings":"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"}