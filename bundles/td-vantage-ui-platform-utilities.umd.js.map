{"version":3,"file":"td-vantage-ui-platform-utilities.umd.js","sources":["ng://@td-vantage/ui-platform/utilities/user-feedback/error/error.service.ts","ng://@td-vantage/ui-platform/utilities/user-feedback/toast/toast.service.ts","ng://@td-vantage/ui-platform/utilities/user-feedback/user-feedback.module.ts","ng://@td-vantage/ui-platform/utilities/theme/theme.service.ts"],"sourcesContent":["import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\n\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { TdDialogService, IAlertConfig, TdAlertDialogComponent } from '@covalent/core/dialogs';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nexport class VantageError {\n  message: string;\n  error: number;\n}\n\n@Injectable()\nexport class VantageErrorService {\n  constructor(private _dialogService: TdDialogService, private _translate: TranslateService) {}\n\n  open(error: VantageError): MatDialogRef<TdAlertDialogComponent> {\n    if (error) {\n      const config: IAlertConfig = {\n        title: this._translate.instant('THERE_WAS_A_PROBLEM'),\n        message: error.message,\n        disableClose: true,\n        closeButton: this._translate.instant('CLOSE'),\n      };\n      if (error.error) {\n        config.message += ` (${error.error.toString()})`;\n      }\n      if (config.message || config.title) {\n        return this._dialogService.openAlert(config);\n      }\n    }\n  }\n}\n\nexport function VANTAGE_ERROR_PROVIDER_FACTORY(\n  parent: VantageErrorService,\n  dialogService: TdDialogService,\n  translate: TranslateService,\n): VantageErrorService {\n  return parent || new VantageErrorService(dialogService, translate);\n}\n\nexport const VANTAGE_ERROR_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageErrorService,\n  deps: [[new Optional(), new SkipSelf(), VantageErrorService], TdDialogService, TranslateService],\n  useFactory: VANTAGE_ERROR_PROVIDER_FACTORY,\n};\n","import { Injectable, Provider, Optional, SkipSelf } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { TdMediaService } from '@covalent/core/media';\n\n@Injectable()\nexport class VantageToastService {\n  constructor(private _snackBarService: MatSnackBar, private _media: TdMediaService) {}\n\n  open(message: string, time: number = 3000): void {\n    if (message) {\n      this._snackBarService.open(message, undefined, {\n        duration: time,\n        horizontalPosition: this._media && this._media.query('gt-sm') ? 'end' : 'center',\n      });\n    }\n  }\n}\n\nexport function VANTAGE_TOAST_PROVIDER_FACTORY(\n  parent: VantageToastService,\n  snackBar: MatSnackBar,\n  media: TdMediaService,\n): VantageToastService {\n  return parent || new VantageToastService(snackBar, media);\n}\n\nexport const VANTAGE_TOAST_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageToastService,\n  deps: [[new Optional(), new SkipSelf(), VantageToastService], MatSnackBar, [new Optional(), TdMediaService]],\n  useFactory: VANTAGE_TOAST_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { CovalentDialogsModule } from '@covalent/core/dialogs';\nimport { CovalentMediaModule } from '@covalent/core/media';\n\nimport { VANTAGE_ERROR_PROVIDER } from './error/error.service';\nimport { VANTAGE_TOAST_PROVIDER } from './toast/toast.service';\n\n@NgModule({\n  imports: [CommonModule, MatSnackBarModule, CovalentDialogsModule, CovalentMediaModule],\n  providers: [VANTAGE_ERROR_PROVIDER, VANTAGE_TOAST_PROVIDER],\n})\nexport class VantageUserFeedbackModule {}\n","import { Injectable, Renderer2, Inject, RendererFactory2 } from '@angular/core';\nimport { fromEvent, BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\nconst THEME_LOCAL_STORAGE_KEY: string = 'vantage.theme';\n\nexport enum VantageTheme {\n  DARK = 'dark-theme',\n  LIGHT = 'light-theme',\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VantageThemeService {\n  private _renderer2: Renderer2;\n\n  private readonly _activeThemeSubject: BehaviorSubject<VantageTheme> = new BehaviorSubject<VantageTheme>(\n    <VantageTheme>localStorage.getItem(THEME_LOCAL_STORAGE_KEY),\n  );\n  readonly activeTheme$: Observable<VantageTheme> = this._activeThemeSubject.asObservable();\n\n  constructor(@Inject(DOCUMENT) private _document: any, private rendererFactory: RendererFactory2) {\n    this._renderer2 = rendererFactory.createRenderer(undefined, undefined);\n    fromEvent(window, 'storage')\n      .pipe(filter((event: StorageEvent) => event.key === THEME_LOCAL_STORAGE_KEY))\n      .subscribe((event: StorageEvent) => this.applyTheme(<VantageTheme>event.newValue));\n  }\n\n  private get activeTheme(): VantageTheme {\n    return this._activeThemeSubject.getValue();\n  }\n\n  private set activeTheme(theme: VantageTheme) {\n    this._activeThemeSubject.next(theme);\n  }\n\n  public get darkThemeIsActive(): boolean {\n    return this.activeTheme === VantageTheme.DARK;\n  }\n  public get lightThemeIsActive(): boolean {\n    return this.activeTheme === VantageTheme.LIGHT;\n  }\n\n  public applyLightTheme(): void {\n    this.applyTheme(VantageTheme.LIGHT);\n  }\n  public applyDarkTheme(): void {\n    this.applyTheme(VantageTheme.DARK);\n  }\n\n  private applyTheme(theme: VantageTheme): void {\n    this._renderer2.removeClass(\n      this._document.querySelector('html'),\n      theme === VantageTheme.DARK ? VantageTheme.LIGHT : VantageTheme.DARK,\n    );\n    localStorage.setItem(THEME_LOCAL_STORAGE_KEY, theme);\n    this._renderer2.addClass(this._document.querySelector('html'), theme);\n    this.activeTheme = <VantageTheme>localStorage.getItem(THEME_LOCAL_STORAGE_KEY);\n  }\n}\n"],"names":["Injectable","TdDialogService","TranslateService","Optional","SkipSelf","MatSnackBar","TdMediaService","NgModule","CommonModule","MatSnackBarModule","CovalentDialogsModule","CovalentMediaModule","BehaviorSubject","fromEvent","filter","Inject","DOCUMENT","RendererFactory2"],"mappings":"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"}