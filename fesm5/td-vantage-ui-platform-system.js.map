{"version":3,"file":"td-vantage-ui-platform-system.js","sources":["ng://@td-vantage/ui-platform/system/system.service.ts","ng://@td-vantage/ui-platform/system/system.module.ts"],"sourcesContent":["import { Injectable, Optional, SkipSelf, Provider } from '@angular/core';\nimport { HttpParams, HttpHeaders, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { mixinHttp, TdGET, TdPUT, TdPOST, TdDELETE, TdParam, TdBody, TdResponse, TdQueryParams } from '@covalent/http';\n\n/*\n * These interfaces are duplicated in the system and the query service.\n * However, within the system service, SystemType includes Aster & Presto.\n * Whereas in the query service, they are excluded.\n * TODO: DRY this up\n */\nexport enum SystemType {\n  Teradata = 'TERADATA',\n  Aster = 'ASTER',\n  Presto = 'PRESTO',\n}\n\nexport const VANTAGE_SYSTEMS_TYPES: SystemType[] = [SystemType.Teradata, SystemType.Aster, SystemType.Presto];\n\nexport interface ISystemAttributes {\n  attributes?: any;\n}\n\nexport interface IAbstractSystem {\n  host?: string;\n  port?: number;\n  system_type?: SystemType;\n  catalog?: string;\n  schema?: string;\n}\n\nexport interface ISystem extends IAbstractSystem {\n  attributes?: string;\n  data_center?: string;\n  environment?: string;\n  id?: string;\n  nickname?: string;\n  platform_id?: number;\n  system_attributes?: ISystemAttributes;\n  version?: string;\n}\n\nexport interface ITestSystem extends IAbstractSystem {\n  account?: string;\n  default_char_set?: string;\n  default_database?: string;\n  log_mech?: string;\n  password?: string;\n  username?: string;\n}\n\n@Injectable()\nexport class VantageSystemService extends mixinHttp(class {}, {\n  baseUrl: '/api/system',\n  baseHeaders: new HttpHeaders({ Accept: 'application/json' }),\n}) {\n  @TdGET({\n    path: '/health',\n  })\n  health(@TdResponse() response?: Observable<HttpResponse<any>>): Observable<boolean> {\n    return response.pipe(\n      catchError((error: HttpErrorResponse) => {\n        return of(false);\n      }),\n      map((res: HttpResponse<any>) => {\n        return !!res;\n      }),\n    );\n  }\n\n  @TdGET({\n    path: '/systems',\n    options: {\n      observe: 'response',\n    },\n  })\n  query(\n    @TdQueryParams() params?: HttpParams,\n    @TdResponse() response?: Observable<HttpResponse<any>>,\n  ): Observable<{ total: number; data: ISystem[] }> {\n    return response.pipe(\n      map((res: HttpResponse<any>) => {\n        return {\n          total: +res.headers.get('X-Total'),\n          data: <ISystem[]>res.body,\n        };\n      }),\n    );\n  }\n\n  @TdGET({\n    path: '/systems/:id',\n  })\n  get(@TdParam('id') id: string | number, @TdResponse() response?: Observable<ISystem>): Observable<ISystem> {\n    return response;\n  }\n\n  @TdPOST({\n    path: '/systems',\n  })\n  create(@TdBody() system: ISystem, @TdResponse() response?: Observable<ISystem>): Observable<ISystem> {\n    return response;\n  }\n\n  @TdPUT({\n    path: '/systems/:id',\n  })\n  update(\n    @TdParam('id') id: string,\n    @TdBody() system: ISystem,\n    @TdResponse() response?: Observable<ISystem>,\n  ): Observable<ISystem> {\n    return response;\n  }\n\n  @TdDELETE({\n    path: '/systems/:id',\n  })\n  delete(@TdParam('id') id: string, @TdResponse() response?: Observable<void>): Observable<void> {\n    return response;\n  }\n\n  @TdPOST({\n    path: '/testsystem',\n  })\n  test(@TdBody() system: ITestSystem, @TdResponse() response?: Observable<HttpResponse<any>>): Observable<boolean> {\n    return response.pipe(\n      map((res: HttpResponse<any>) => {\n        return true;\n      }),\n    );\n  }\n}\n\nexport function VANTAGE_SYSTEM_PROVIDER_FACTORY(parent: VantageSystemService): VantageSystemService {\n  return parent || new VantageSystemService();\n}\n\nexport const VANTAGE_SYSTEM_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageSystemService,\n  deps: [[new Optional(), new SkipSelf(), VantageSystemService]],\n  useFactory: VANTAGE_SYSTEM_PROVIDER_FACTORY,\n};\n","import { NgModule, Type, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VANTAGE_SYSTEM_PROVIDER } from './system.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [VANTAGE_SYSTEM_PROVIDER],\n})\nexport class VantageSystemModule {}\n"],"names":[],"mappings":"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"}