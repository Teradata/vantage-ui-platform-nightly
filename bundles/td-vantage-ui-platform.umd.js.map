{"version":3,"file":"td-vantage-ui-platform.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://@td-vantage/ui-platform/audit/audit.service.ts","ng://@td-vantage/ui-platform/audit/audit.module.ts","ng://@td-vantage/ui-platform/notification/smtp/smtp.service.ts","ng://@td-vantage/ui-platform/notification/notification.module.ts","ng://@td-vantage/ui-platform/system/system.service.ts","ng://@td-vantage/ui-platform/system/system.module.ts","ng://@td-vantage/ui-platform/user/ldap/ldap.service.ts","ng://@td-vantage/ui-platform/user/user/user.service.ts","ng://@td-vantage/ui-platform/user/group/group.service.ts","ng://@td-vantage/ui-platform/user/user.module.ts","ng://@td-vantage/ui-platform/utilities/user-feedback/error/error.service.ts","ng://@td-vantage/ui-platform/utilities/user-feedback/toast/toast.service.ts","ng://@td-vantage/ui-platform/utilities/user-feedback/user-feedback.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Optional, SkipSelf, Provider } from '@angular/core';\nimport { HttpParams, HttpHeaders, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport {\n  TdHttp,\n  TdGET,\n  TdPOST,\n  TdParam,\n  TdBody,\n  TdResponse,\n  TdQueryParams,\n} from '@covalent/http';\n\nexport interface IAuditLog {\n  action?: string;\n  component?: string;\n  correlation_id?: string;\n  details?: string;\n  id?: number;\n  logtime?: any;\n  message?: string;\n  result?: boolean;\n  username?: string;\n}\n\n@TdHttp({\n  baseUrl: '/api/audit',\n  baseHeaders: new HttpHeaders({ 'Accept': 'application/json' }),\n})\nexport class VantageAuditService {\n\n  @TdGET({\n    path: '/audit/messages',\n    options: {\n      observe: 'response',\n    },\n  })\n  query(@TdQueryParams() params?: HttpParams,\n        @TdResponse() response?: Observable<HttpResponse<any>>): Observable<{total: number, data: IAuditLog[]}> {\n    return response.pipe(\n      map((res: HttpResponse<any>) => {\n        return {\n          total: +res.headers.get('X-Total'),\n          data: <IAuditLog[]>res.body,\n        };\n      }),\n    );\n  }\n\n  @TdPOST({\n    path: '/audit/messages',\n  })\n  create(@TdBody() body: IAuditLog,\n          @TdResponse() response?: Observable<IAuditLog>,\n        ): Observable<IAuditLog> {\n    return response;\n  }\n\n  @TdGET({\n    path: '/audit/messages/:id',\n  })\n  get(@TdParam('id') id: number | string,\n      @TdResponse() response?: Observable<IAuditLog>): Observable<IAuditLog> {\n    return response;\n  }\n\n  @TdGET({\n    path: '/health',\n  })\n  health(@TdResponse() response?: Observable<HttpResponse<any>>): Observable<boolean> {\n    return response.pipe(\n      catchError((error: HttpErrorResponse) => {\n        return of(false);\n      }),\n      map((res: HttpResponse<any>) => {\n        return !!res;\n      }),\n    );\n  }\n}\n\nexport function VANTAGE_AUDIT_PROVIDER_FACTORY(parent: VantageAuditService): VantageAuditService {\n  return parent || new VantageAuditService();\n}\n\nexport const VANTAGE_AUDIT_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageAuditService,\n  deps: [[new Optional(), new SkipSelf(), VantageAuditService]],\n  useFactory: VANTAGE_AUDIT_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VANTAGE_AUDIT_PROVIDER } from './audit.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    VANTAGE_AUDIT_PROVIDER,\n  ],\n})\nexport class VantageAuditModule {\n\n}\n","import { Provider, Optional, SkipSelf } from '@angular/core';\nimport { HttpHeaders, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport {\n  TdHttp,\n  TdGET,\n  TdPUT,\n  TdDELETE,\n  TdBody,\n  TdResponse,\n} from '@covalent/http';\n\nexport interface ISMTPConfig {\n  server?: string;\n  port?: number;\n  reply_address?: string;\n  smtp_username?: string;\n  smtp_password?: string;\n  use_ssl?: boolean;\n  anon_logon?: boolean;\n  server_timeout?: number;\n}\n\n@TdHttp({\n  baseUrl: '/api/notification',\n  baseHeaders: new HttpHeaders({ 'Accept': 'application/json' }),\n})\nexport class VantageSMTPService {\n\n  @TdPUT({\n    path: '/smtp-config',\n  })\n  create(@TdBody() body: ISMTPConfig,\n         @TdResponse() response?: Observable<ISMTPConfig>,\n        ): Observable<ISMTPConfig> {\n    return response;\n  }\n\n  @TdGET({\n    path: '/smtp-config',\n  })\n  query(@TdResponse() response?: Observable<ISMTPConfig>): Observable<ISMTPConfig> {\n    return response;\n  }\n  \n  @TdDELETE({\n    path: '/smtp-config',\n  })\n  delete(@TdResponse() response?: Observable<void>): Observable<void> {\n    return response;\n  }\n\n  @TdGET({\n    path: '/health',\n  })\n  health(@TdResponse() response?: Observable<HttpResponse<any>>): Observable<boolean> {\n    return response.pipe(\n      catchError((error: HttpErrorResponse) => {\n        return of(false);\n      }),\n      map((res: HttpResponse<any>) => {\n        return !!res;\n      }),\n    );\n  }\n}\n\nexport function VANTAGE_SMTP_PROVIDER_FACTORY(parent: VantageSMTPService): VantageSMTPService {\n  return parent || new VantageSMTPService();\n}\n\nexport const VANTAGE_SMTP_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageSMTPService,\n  deps: [[new Optional(), new SkipSelf(), VantageSMTPService]],\n  useFactory: VANTAGE_SMTP_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VANTAGE_SMTP_PROVIDER } from './smtp/smtp.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    VANTAGE_SMTP_PROVIDER,\n  ],\n})\nexport class VantageNotificationModule {\n\n}\n","import { Optional, SkipSelf, Provider } from '@angular/core';\nimport { HttpParams, HttpHeaders, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport {\n  TdHttp,\n  TdGET,\n  TdPUT,\n  TdPOST,\n  TdDELETE,\n  TdParam,\n  TdBody,\n  TdResponse,\n  TdQueryParams,\n} from '@covalent/http';\n\nexport enum SystemType {\n  Teradata = 'TERADATA',\n  Aster = 'ASTER',\n  Presto = 'PRESTO',\n}\n\nexport const VANTAGE_SYSTEMS_TYPES: SystemType[] = [\n  SystemType.Teradata,\n  SystemType.Aster,\n  SystemType.Presto,\n];\n\nexport interface ISystemAttributes {\n  attributes?: any;\n}\n\nexport interface IAbstractSystem {\n  host?: string;\n  port?: number;\n  system_type?: SystemType;\n  catalog?: string;\n  schema?: string;\n}\n\nexport interface ISystem extends IAbstractSystem {\n  attributes?: string;\n  data_center?: string;\n  environment?: string;\n  id?: string;\n  nickname?: string;\n  platform_id?: number;\n  system_attributes?: ISystemAttributes;\n  version?: string;\n}\n\nexport interface ITestSystem extends IAbstractSystem {\n  account?: string;\n  default_char_set?: string;\n  default_database?: string;\n  log_mech?: string;\n  password?: string;\n  username?: string;\n}\n\n@TdHttp({\n  baseUrl: '/api/system',\n  baseHeaders: new HttpHeaders({ 'Accept': 'application/json' }),\n})\nexport class VantageSystemService {\n\n  @TdGET({\n    path: '/health',\n  })\n  health(@TdResponse() response?: Observable<HttpResponse<any>>): Observable<boolean> {\n    return response.pipe(\n      catchError((error: HttpErrorResponse) => {\n        return of(false);\n      }),\n      map((res: HttpResponse<any>) => {\n        return !!res;\n      }),\n    );\n  }\n\n  @TdGET({\n    path: '/systems',\n    options: {\n      observe: 'response',\n    },\n  })\n  query(@TdQueryParams() params?: HttpParams,\n         @TdResponse() response?: Observable<HttpResponse<any>>): Observable<{total: number, data: ISystem[]}> {\n    return response.pipe(\n      map((res: HttpResponse<any>) => {\n        return {\n          total: +res.headers.get('X-Total'),\n          data: <ISystem[]>res.body,\n        };\n      }),\n    );\n  }\n\n  @TdGET({\n    path: '/systems/:id',\n  })\n  get(@TdParam('id') id: string | number,\n        @TdResponse() response?: Observable<ISystem>): Observable<ISystem> {\n    return response;\n  }\n\n  @TdPOST({\n    path: '/systems',\n  })\n  create(@TdBody() system: ISystem,\n          @TdResponse() response?: Observable<ISystem>): Observable<ISystem> {\n    return response;\n  }\n\n  @TdPUT({\n    path: '/systems/:id',\n  })\n  update(@TdParam('id') id: string,\n          @TdBody() system: ISystem,\n          @TdResponse() response?: Observable<ISystem>): Observable<ISystem> {\n    return response;\n  }\n\n  @TdDELETE({\n    path: '/systems/:id',\n  })\n  delete(@TdParam('id') id: string,\n          @TdResponse() response?: Observable<void>): Observable<void> {\n    return response;\n  }\n\n  @TdPOST({\n    path: '/testsystem',\n  })\n  test(@TdBody() system: ITestSystem,\n        @TdResponse() response?: Observable<HttpResponse<any>>): Observable<boolean> {\n    return response.pipe(\n      map((res: HttpResponse<any>) => {\n        return true;\n      }),\n    );\n  }\n}\n\nexport function VANTAGE_SYSTEM_PROVIDER_FACTORY(parent: VantageSystemService): VantageSystemService {\n  return parent || new VantageSystemService();\n}\n\nexport const VANTAGE_SYSTEM_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageSystemService,\n  deps: [[new Optional(), new SkipSelf(), VantageSystemService]],\n  useFactory: VANTAGE_SYSTEM_PROVIDER_FACTORY,\n};\n","import { NgModule, Type, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VANTAGE_SYSTEM_PROVIDER } from './system.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    VANTAGE_SYSTEM_PROVIDER,\n  ],\n})\nexport class VantageSystemModule {\n\n}\n","import { Provider, Optional, SkipSelf } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  TdHttp,\n  TdGET,\n  TdPUT,\n  TdPOST,\n  TdPATCH,\n  TdDELETE,\n  TdParam,\n  TdBody,\n  TdResponse,\n} from '@covalent/http';\n\nexport enum LDAPEncription {\n  None = 'NONE',\n}\n\nexport interface ILDAPConfig {\n  allowed_groups?: string[];\n  base_dn?: string;\n  config_id?: number;\n  connectionUrl?: string;\n  email_field?: string;\n  encryption?: LDAPEncription;\n  group_id_field?: string;\n  groups_base_dn?: string;\n  id_field?: string;\n  member_field?: string;\n  member_of_field?: string;\n  name_field?: string;\n  port?: number;\n  search_pass?: string;\n  search_user?: string;\n  server?: string;\n  url?: string;\n}\n\n@TdHttp({\n  baseUrl: '/api/user/ldap/config',\n  baseHeaders: new HttpHeaders({ 'Accept': 'application/json' }),\n})\nexport class VantageLDAPService {\n  \n  @TdGET({\n    path: '/',\n  })\n  query(@TdResponse() response?: Observable<ILDAPConfig[]>): Observable<ILDAPConfig[]> {\n    return response;\n  }\n\n  @TdPOST({\n    path: '/',\n  })\n  create(@TdBody() body: ILDAPConfig,\n         @TdResponse() response?: Observable<ILDAPConfig>): Observable<ILDAPConfig> {\n    return response;\n  }\n\n  @TdPATCH({\n    path: '/:id',\n  })\n  update(@TdParam('id') id: string | number,\n          @TdBody() body: ILDAPConfig,\n          @TdResponse() response?: Observable<ILDAPConfig>): Observable<ILDAPConfig> {\n    return response;\n  }\n\n  @TdDELETE({\n    path: '/:id',\n  })\n  delete(@TdParam('id') id: string | number,\n          @TdResponse() response?: Observable<void>): Observable<void> {\n    return response;\n  }\n\n  @TdPOST({\n    path: '/verify',\n    options: {\n      observe: 'response',\n    },\n  })\n  test(@TdBody() body: ILDAPConfig,\n       @TdResponse() response?: Observable<boolean>): Observable<boolean> {\n    return response.pipe(\n      map((res: any) => {\n        return res.status === 200 ? true : false;\n      }),\n    );\n  }\n}\n\nexport function VANTAGE_LDAP_PROVIDER_FACTORY(parent: VantageLDAPService): VantageLDAPService {\n  return parent || new VantageLDAPService();\n}\n\nexport const VANTAGE_LDAP_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageLDAPService,\n  deps: [[new Optional(), new SkipSelf(), VantageLDAPService]],\n  useFactory: VANTAGE_LDAP_PROVIDER_FACTORY,\n};\n","import { Provider, SkipSelf, Optional } from '@angular/core';\nimport { HttpHeaders, HttpResponse, HttpParams } from '@angular/common/http';\nimport {\n  TdHttp,\n  TdGET,\n  TdResponse,\n  TdParam,\n  TdQueryParams,\n} from '@covalent/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nexport interface IUser {\n  username?: string;\n  password?: string;\n  email?: string;\n  local?: boolean;\n  admin?: boolean;\n  groups?: string[];\n  display_name?: string;\n  access_token?: string;\n  expires_at?: number;\n}\n\n@TdHttp({\n  baseUrl: '/api/user',\n  baseHeaders: new HttpHeaders({\n    Accept: 'application/json',\n  }),\n})\nexport class VantageUserService {\n\n  /**\n   * get all users\n   */\n  @TdGET({\n    path: '/users',\n    options: {\n      observe: 'response',\n    },\n  })\n  query(\n    @TdQueryParams() queryParams?: HttpParams,\n    @TdResponse() response?: Observable<HttpResponse<any>>,\n  ): Observable<{total: number, data: IUser[]}> {\n    return response.pipe(\n      catchError((error: Response) => {\n        return of(error);\n      }),\n      map((res: HttpResponse<any>) => {\n        return {\n          total: +res.headers.get('X-Total'),\n          data: <IUser[]>res.body,\n        };\n      }),\n    );\n  }\n\n  /**\n   * gets a single users information\n   */\n  @TdGET({\n    path: '/users/:username',\n    options: {\n      observe: 'response',\n    },\n  })\n  get(\n    @TdParam('username') id: string,\n    @TdResponse() response?: Observable<HttpResponse<any>>,\n  ): Observable<IUser> {\n    return response.pipe(\n      catchError((error: Response) => {\n        return of(error);\n      }),\n      map((res: HttpResponse<IUser>) => {\n        return <IUser>res.body;\n      }),\n    );\n  }\n\n}\n\nexport function VANTAGE_USER_PROVIDER_FACTORY(parent: VantageUserService): VantageUserService {\n  return parent || new VantageUserService();\n}\n\nexport const VANTAGE_USER_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageUserService,\n  deps: [[new Optional(), new SkipSelf(), VantageUserService]],\n  useFactory: VANTAGE_USER_PROVIDER_FACTORY,\n};\n","import { Provider, SkipSelf, Optional } from '@angular/core';\nimport { HttpHeaders, HttpResponse, HttpParams } from '@angular/common/http';\nimport {\n  TdHttp,\n  TdGET,\n  TdResponse,\n  TdQueryParams,\n} from '@covalent/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nexport interface IGroup {\n  name?: string;\n  description?: string;\n  id?: string;\n  display_name?: string;\n  users?: string[];\n}\n\n@TdHttp({\n  baseUrl: '/api/user',\n  baseHeaders: new HttpHeaders({\n    Accept: 'application/json',\n  }),\n})\nexport class VantageGroupService {\n\n  /**\n   * get groups in paginated form via query string\n   */\n  @TdGET({\n    path: '/groups',\n    options: {\n      observe: 'response',\n    },\n  })\n  query(\n    @TdQueryParams() queryParams?: HttpParams,\n    @TdResponse() response?: Observable<HttpResponse<any>>,\n  ): Observable<{total: number, data: IGroup[]}> {\n    return response.pipe(\n      catchError((error: Response) => {\n        return of(error);\n      }),\n      map((res: HttpResponse<any>) => {\n        return {\n          total: +res.headers.get('X-Total'),\n          data: <IGroup[]>res.body,\n        };\n      }),\n    );\n  }\n}\n\nexport function VANTAGE_GROUP_PROVIDER_FACTORY(parent: VantageGroupService): VantageGroupService {\n  return parent || new VantageGroupService();\n}\n\nexport const VANTAGE_GROUP_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageGroupService,\n  deps: [[new Optional(), new SkipSelf(), VantageGroupService]],\n  useFactory: VANTAGE_GROUP_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VANTAGE_LDAP_PROVIDER } from './ldap/ldap.service';\nimport { VANTAGE_USER_PROVIDER } from './user/user.service';\nimport { VANTAGE_GROUP_PROVIDER } from './group/group.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    VANTAGE_LDAP_PROVIDER,\n    VANTAGE_USER_PROVIDER,\n    VANTAGE_GROUP_PROVIDER,\n  ],\n})\nexport class VantageUserModule {\n\n}\n","import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\n\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { TdDialogService, IAlertConfig, TdAlertDialogComponent } from '@covalent/core/dialogs';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nexport class VantageError {\n  message: string;\n  error: number;\n}\n\n@Injectable()\nexport class VantageErrorService {\n\n  constructor(private _dialogService: TdDialogService,\n              private _translate: TranslateService) {}\n\n  open(error: VantageError): MatDialogRef<TdAlertDialogComponent> {\n    if (error) {\n      let config: IAlertConfig = {\n        title: this._translate.instant('THERE_WAS_A_PROBLEM'),\n        message: error.message,\n        disableClose: true,\n        closeButton: this._translate.instant('CLOSE'),\n      };\n      if (error.error) {\n        config.message += ` (${error.error.toString()})`;\n      }\n      if (config.message || config.title) {\n        return this._dialogService.openAlert(config);\n      }\n    }\n  }\n\n}\n\nexport function VANTAGE_ERROR_PROVIDER_FACTORY(\n  parent: VantageErrorService, dialogService: TdDialogService, translate: TranslateService): VantageErrorService {\n  return parent || new VantageErrorService(dialogService, translate);\n}\n\nexport const VANTAGE_ERROR_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageErrorService,\n  deps: [[new Optional(), new SkipSelf(), VantageErrorService], TdDialogService, TranslateService],\n  useFactory: VANTAGE_ERROR_PROVIDER_FACTORY,\n};\n","import { Injectable, Provider, Optional, SkipSelf } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { TdMediaService } from '@covalent/core/media';\n\n@Injectable()\nexport class VantageToastService {\n\n  constructor(private _snackBarService: MatSnackBar,\n              private _media: TdMediaService) { }\n\n  open(message: string, time: number = 3000): void {\n    if (message) {\n      this._snackBarService.open(message, undefined, {\n        duration: time,\n        horizontalPosition: this._media && this._media.query('gt-sm') ? 'end' : 'center',\n      });\n    }\n  }\n\n}\n\nexport function VANTAGE_TOAST_PROVIDER_FACTORY(\n  parent: VantageToastService, snackBar: MatSnackBar, media: TdMediaService): VantageToastService {\n  return parent || new VantageToastService(snackBar, media);\n}\n\nexport const VANTAGE_TOAST_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: VantageToastService,\n  deps: [[new Optional(), new SkipSelf(), VantageToastService], MatSnackBar, [new Optional(), TdMediaService]],\n  useFactory: VANTAGE_TOAST_PROVIDER_FACTORY,\n};\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { CovalentDialogsModule } from '@covalent/core/dialogs';\nimport { CovalentMediaModule } from '@covalent/core/media';\n\nimport { VANTAGE_ERROR_PROVIDER } from './error/error.service';\nimport { VANTAGE_TOAST_PROVIDER } from './toast/toast.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatSnackBarModule,\n    CovalentDialogsModule,\n    CovalentMediaModule,\n  ],\n  providers: [\n    VANTAGE_ERROR_PROVIDER,\n    VANTAGE_TOAST_PROVIDER,\n  ],\n})\nexport class VantageUserFeedbackModule {\n\n}\n"],"names":["map","catchError","of","tslib_1.__decorate","TdGET","tslib_1.__param","TdQueryParams","TdResponse","HttpParams","Observable","TdPOST","TdBody","TdParam","TdHttp","HttpHeaders","Optional","SkipSelf","NgModule","CommonModule","TdPUT","TdDELETE","TdPATCH","Injectable","TdDialogService","TranslateService","MatSnackBar","TdMediaService","MatSnackBarModule","CovalentDialogsModule","CovalentMediaModule"],"mappings":"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"}