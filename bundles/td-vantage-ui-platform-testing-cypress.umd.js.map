{"version":3,"file":"td-vantage-ui-platform-testing-cypress.umd.js","sources":["ng://@td-vantage/ui-platform/testing/cypress/cypress.ts"],"sourcesContent":["/// <reference types=\"cypress\" />\n\nconst BASE_URL: string = Cypress.config('baseUrl'); // ex: http://localhost:4200\nconst LOGIN_URL: string = Cypress.env('loginUrl'); // ex: https://vantage.url.io/auth\n\nexport interface ILoginCredentials {\n  username: string;\n  password: string;\n}\n\n// inspired by https://vrockai.github.io/blog/2017/10/28/cypress-keycloak-intregration/\nexport function login({ username, password }: ILoginCredentials): void {\n  cy.request({\n    url: LOGIN_URL,\n  }).then((response: any) => {\n    const loginPageHtml: HTMLElement = document.createElement('html');\n    loginPageHtml.innerHTML = response.body;\n    const loginForm: HTMLFormElement = loginPageHtml.querySelector('#kc-form-login');\n    if (loginForm) {\n      cy.request({\n        form: true,\n        method: 'POST',\n        url: loginForm.action,\n        followRedirect: false,\n        body: {\n          username,\n          password,\n        },\n      }).then(() => {\n        _redirectToHome();\n      });\n    } else {\n      _redirectToHome();\n    }\n  });\n}\n\nexport function logout(): void {\n  cy.request('/api/user/logout');\n}\n\nfunction _redirectToHome(): void {\n  cy.visit(BASE_URL);\n  cy.url().should('not.include', LOGIN_URL);\n  cy.url().should('include', BASE_URL);\n}\n\nexport const SSO_COOKIES: string[] = ['USER_SSO_ID', 'XSRF-TOKEN'];\nexport function whiteListSSOCookies(): void {\n  Cypress.Cookies.defaults({ whitelist: SSO_COOKIES });\n}\n\nexport function waitForAngular(): Cypress.Chainable {\n  cy.get('[ng-version]').should('exist');\n  return cy.window().then((win: Window) => {\n    return new Cypress.Promise(\n      (resolve: (thenableOrResult?: {} | PromiseLike<{}>) => void, reject: (error?: any) => void) => {\n        const testabilities: any = win['getAllAngularTestabilities']();\n        if (!testabilities) {\n          return reject(new Error('No testabilities. Is Angular loaded?'));\n        }\n        let count: number = testabilities.length;\n        testabilities.forEach((testability: any) =>\n          testability.whenStable(() => {\n            count--;\n            if (count !== 0) {\n              return;\n            }\n            resolve();\n          }),\n        );\n      },\n    );\n  });\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;QAEM,QAAQ,GAAW,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;;;QAC5C,SAAS,GAAW,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;;;;IAEjD,gCAGC;;;QAFC,qCAAiB;;QACjB,qCAAiB;;;;;;;IAInB,SAAgB,KAAK,CAAC,EAAyC;YAAvC,sBAAQ,EAAE,sBAAQ;QACxC,EAAE,CAAC,OAAO,CAAC;YACT,GAAG,EAAE,SAAS;SACf,CAAC,CAAC,IAAI;;;;QAAC,UAAC,QAAa;;gBACd,aAAa,GAAgB,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC;YACjE,aAAa,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;;gBAClC,SAAS,GAAoB,aAAa,CAAC,aAAa,CAAC,gBAAgB,CAAC;YAChF,IAAI,SAAS,EAAE;gBACb,EAAE,CAAC,OAAO,CAAC;oBACT,IAAI,EAAE,IAAI;oBACV,MAAM,EAAE,MAAM;oBACd,GAAG,EAAE,SAAS,CAAC,MAAM;oBACrB,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,QAAQ,UAAA;wBACR,QAAQ,UAAA;qBACT;iBACF,CAAC,CAAC,IAAI;;;gBAAC;oBACN,eAAe,EAAE,CAAC;iBACnB,EAAC,CAAC;aACJ;iBAAM;gBACL,eAAe,EAAE,CAAC;aACnB;SACF,EAAC,CAAC;KACJ;;;;IAED,SAAgB,MAAM;QACpB,EAAE,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;KAChC;;;;IAED,SAAS,eAAe;QACtB,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACnB,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QAC1C,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;KACtC;;AAED,QAAa,WAAW,GAAa,CAAC,aAAa,EAAE,YAAY,CAAC;;;;IAClE,SAAgB,mBAAmB;QACjC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,WAAW,EAAE,CAAC,CAAC;KACtD;;;;IAED,SAAgB,cAAc;QAC5B,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI;;;;QAAC,UAAC,GAAW;YAClC,OAAO,IAAI,OAAO,CAAC,OAAO;;;;;YACxB,UAAC,OAA0D,EAAE,MAA6B;;oBAClF,aAAa,GAAQ,GAAG,CAAC,4BAA4B,CAAC,EAAE;gBAC9D,IAAI,CAAC,aAAa,EAAE;oBAClB,OAAO,MAAM,CAAC,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC,CAAC;iBAClE;;oBACG,KAAK,GAAW,aAAa,CAAC,MAAM;gBACxC,aAAa,CAAC,OAAO;;;;gBAAC,UAAC,WAAgB;oBACrC,OAAA,WAAW,CAAC,UAAU;;;oBAAC;wBACrB,KAAK,EAAE,CAAC;wBACR,IAAI,KAAK,KAAK,CAAC,EAAE;4BACf,OAAO;yBACR;wBACD,OAAO,EAAE,CAAC;qBACX,EAAC;iBAAA,EACH,CAAC;aACH,EACF,CAAC;SACH,EAAC,CAAC;KACJ;;;;;;;;;;;;;;;;"}